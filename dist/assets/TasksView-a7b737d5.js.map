{"version":3,"file":"TasksView-a7b737d5.js","sources":["../../src/views/TasksView.vue"],"sourcesContent":["<template>\n  <div class=\"grid\">\n    <!-- Task Stats -->\n    <div class=\"col-12 md:col-6 lg:col-3\">\n      <div class=\"surface-card p-4 border-round shadow-1\">\n        <div class=\"flex justify-content-between mb-3\">\n          <div>\n            <span class=\"block text-500 font-medium mb-3\">Total Tasks</span>\n            <div class=\"text-900 font-medium text-xl\">{{ stats.total }}</div>\n          </div>\n          <div class=\"flex align-items-center justify-content-center bg-blue-100 border-round\" style=\"width:2.5rem;height:2.5rem\">\n            <i class=\"pi pi-check-square text-blue-500 text-xl\"></i>\n          </div>\n        </div>\n        <span class=\"text-green-500 font-medium\">{{ stats.completed }} completed </span>\n        <span class=\"text-500\">this week</span>\n      </div>\n    </div>\n\n    <div class=\"col-12 md:col-6 lg:col-3\">\n      <div class=\"surface-card p-4 border-round shadow-1\">\n        <div class=\"flex justify-content-between mb-3\">\n          <div>\n            <span class=\"block text-500 font-medium mb-3\">Overdue</span>\n            <div class=\"text-900 font-medium text-xl\">{{ stats.overdue }}</div>\n          </div>\n          <div class=\"flex align-items-center justify-content-center bg-orange-100 border-round\" style=\"width:2.5rem;height:2.5rem\">\n            <i class=\"pi pi-exclamation-triangle text-orange-500 text-xl\"></i>\n          </div>\n        </div>\n        <span class=\"text-500\">Requires immediate attention</span>\n      </div>\n    </div>\n\n    <div class=\"col-12 md:col-6 lg:col-3\">\n      <div class=\"surface-card p-4 border-round shadow-1\">\n        <div class=\"flex justify-content-between mb-3\">\n          <div>\n            <span class=\"block text-500 font-medium mb-3\">Due Today</span>\n            <div class=\"text-900 font-medium text-xl\">{{ stats.dueToday }}</div>\n          </div>\n          <div class=\"flex align-items-center justify-content-center bg-cyan-100 border-round\" style=\"width:2.5rem;height:2.5rem\">\n            <i class=\"pi pi-clock text-cyan-500 text-xl\"></i>\n          </div>\n        </div>\n        <span class=\"text-500\">Tasks due in the next 24h</span>\n      </div>\n    </div>\n\n    <div class=\"col-12 md:col-6 lg:col-3\">\n      <div class=\"surface-card p-4 border-round shadow-1\">\n        <div class=\"flex justify-content-between mb-3\">\n          <div>\n            <span class=\"block text-500 font-medium mb-3\">Completion Rate</span>\n            <div class=\"text-900 font-medium text-xl\">{{ stats.completionRate }}%</div>\n          </div>\n          <div class=\"flex align-items-center justify-content-center bg-purple-100 border-round\" style=\"width:2.5rem;height:2.5rem\">\n            <i class=\"pi pi-chart-line text-purple-500 text-xl\"></i>\n          </div>\n        </div>\n        <span class=\"text-{{ stats.completionTrend > 0 ? 'green' : 'red' }}-500 font-medium\">{{ Math.abs(stats.completionTrend) }}% </span>\n        <span class=\"text-500\">vs last week</span>\n      </div>\n    </div>\n\n    <!-- Task List -->\n    <div class=\"col-12\">\n      <div class=\"surface-card p-4 border-round shadow-1\">\n        <div class=\"flex justify-content-between align-items-center mb-5\">\n          <h3>Tasks</h3>\n          <div class=\"flex gap-2\">\n            <span class=\"p-input-icon-left\">\n              <i class=\"pi pi-search\" />\n              <InputText v-model=\"filters.search\" placeholder=\"Search tasks...\" />\n            </span>\n            <Button label=\"New Task\" icon=\"pi pi-plus\" @click=\"openNewTaskDialog\" />\n          </div>\n        </div>\n\n        <DataTable :value=\"filteredTasks\" \n          v-model:selection=\"selectedTasks\"\n          :paginator=\"true\" \n          :rows=\"10\"\n          dataKey=\"id\"\n          :filters=\"filters\"\n          filterDisplay=\"menu\"\n          :loading=\"loading\"\n          :rowsPerPageOptions=\"[5,10,20,50]\"\n          paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n          responsiveLayout=\"scroll\"\n          currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} tasks\"\n          class=\"p-datatable-sm\">\n          \n          <Column selectionMode=\"multiple\" headerStyle=\"width: 3rem\"></Column>\n          \n          <Column field=\"title\" header=\"Task\" style=\"min-width:200px\">\n            <template #body=\"slotProps\">\n              <div class=\"flex align-items-center gap-2\">\n                <Checkbox v-model=\"slotProps.data.completed\" :binary=\"true\" />\n                <span :class=\"{ 'line-through text-500': slotProps.data.completed }\">\n                  {{ slotProps.data.title }}\n                </span>\n              </div>\n            </template>\n          </Column>\n\n          <Column field=\"priority\" header=\"Priority\" style=\"width:120px\">\n            <template #body=\"slotProps\">\n              <Tag :value=\"slotProps.data.priority\" :severity=\"getPrioritySeverity(slotProps.data.priority)\" />\n            </template>\n          </Column>\n\n          <Column field=\"dueDate\" header=\"Due Date\" style=\"width:150px\">\n            <template #body=\"slotProps\">\n              {{ formatDate(slotProps.data.dueDate) }}\n            </template>\n          </Column>\n\n          <Column field=\"assignee\" header=\"Assignee\" style=\"width:200px\">\n            <template #body=\"slotProps\">\n              <div class=\"flex align-items-center gap-2\">\n                <Avatar :label=\"getInitials(slotProps.data.assignee)\" size=\"small\" shape=\"circle\" />\n                <span>{{ slotProps.data.assignee }}</span>\n              </div>\n            </template>\n          </Column>\n\n          <Column field=\"status\" header=\"Status\" style=\"width:150px\">\n            <template #body=\"slotProps\">\n              <Tag :value=\"slotProps.data.status\" :severity=\"getStatusSeverity(slotProps.data.status)\" />\n            </template>\n          </Column>\n\n          <Column style=\"width:100px\">\n            <template #body=\"slotProps\">\n              <div class=\"flex gap-2\">\n                <Button icon=\"pi pi-pencil\" text rounded @click=\"editTask(slotProps.data)\" />\n                <Button icon=\"pi pi-trash\" text rounded severity=\"danger\" @click=\"confirmDeleteTask(slotProps.data)\" />\n              </div>\n            </template>\n          </Column>\n        </DataTable>\n      </div>\n    </div>\n  </div>\n\n  <!-- Task Dialog -->\n  <Dialog v-model:visible=\"taskDialog\" :header=\"dialogMode === 'new' ? 'New Task' : 'Edit Task'\" modal class=\"p-fluid\" :style=\"{width: '450px'}\">\n    <div class=\"field\">\n      <label for=\"title\">Title</label>\n      <InputText id=\"title\" v-model.trim=\"task.title\" required autofocus :class=\"{'p-invalid': submitted && !task.title}\" />\n      <small class=\"p-error\" v-if=\"submitted && !task.title\">Title is required.</small>\n    </div>\n\n    <div class=\"field\">\n      <label for=\"description\">Description</label>\n      <Textarea id=\"description\" v-model=\"task.description\" rows=\"3\" />\n    </div>\n\n    <div class=\"formgrid grid\">\n      <div class=\"field col\">\n        <label for=\"priority\">Priority</label>\n        <Dropdown id=\"priority\" v-model=\"task.priority\" :options=\"priorities\" optionLabel=\"label\" optionValue=\"value\" placeholder=\"Select Priority\" />\n      </div>\n\n      <div class=\"field col\">\n        <label for=\"status\">Status</label>\n        <Dropdown id=\"status\" v-model=\"task.status\" :options=\"statuses\" optionLabel=\"label\" optionValue=\"value\" placeholder=\"Select Status\" />\n      </div>\n    </div>\n\n    <div class=\"formgrid grid\">\n      <div class=\"field col\">\n        <label for=\"dueDate\">Due Date</label>\n        <Calendar id=\"dueDate\" v-model=\"task.dueDate\" showTime hourFormat=\"24\" />\n      </div>\n\n      <div class=\"field col\">\n        <label for=\"assignee\">Assignee</label>\n        <Dropdown id=\"assignee\" v-model=\"task.assignee\" :options=\"users\" optionLabel=\"name\" optionValue=\"name\" placeholder=\"Select Assignee\" />\n      </div>\n    </div>\n\n    <template #footer>\n      <Button label=\"Cancel\" icon=\"pi pi-times\" text @click=\"hideDialog\" />\n      <Button label=\"Save\" icon=\"pi pi-check\" @click=\"saveTask\" />\n    </template>\n  </Dialog>\n\n  <ConfirmDialog></ConfirmDialog>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted } from 'vue'\nimport { useConfirm } from 'primevue/useconfirm'\nimport { useToast } from 'primevue/usetoast'\nimport { DateTime } from 'luxon'\n\n// PrimeVue Components\nimport DataTable from 'primevue/datatable'\nimport Column from 'primevue/column'\nimport Button from 'primevue/button'\nimport Dialog from 'primevue/dialog'\nimport InputText from 'primevue/inputtext'\nimport Dropdown from 'primevue/dropdown'\nimport Calendar from 'primevue/calendar'\nimport Textarea from 'primevue/textarea'\nimport Tag from 'primevue/tag'\nimport Avatar from 'primevue/avatar'\nimport Checkbox from 'primevue/checkbox'\n\nconst confirm = useConfirm()\nconst toast = useToast()\n\n// Stats\nconst stats = ref({\n  total: 45,\n  completed: 32,\n  overdue: 5,\n  dueToday: 8,\n  completionRate: 71,\n  completionTrend: 5\n})\n\n// Tasks Data\nconst tasks = ref([\n  {\n    id: 1,\n    title: 'Follow up with client',\n    description: 'Schedule a call to discuss proposal',\n    priority: 'High',\n    status: 'In Progress',\n    dueDate: new Date('2025-01-28'),\n    assignee: 'John Doe',\n    completed: false\n  },\n  {\n    id: 2,\n    title: 'Prepare presentation',\n    description: 'Create slides for next week\\'s meeting',\n    priority: 'Medium',\n    status: 'Not Started',\n    dueDate: new Date('2025-01-29'),\n    assignee: 'Jane Smith',\n    completed: false\n  }\n])\n\n// UI State\nconst loading = ref(false)\nconst taskDialog = ref(false)\nconst dialogMode = ref('new')\nconst submitted = ref(false)\nconst selectedTasks = ref([])\nconst filters = ref({\n  search: '',\n  global: { value: null, matchMode: 'contains' }\n})\n\n// Form Data\nconst task = ref({\n  id: null,\n  title: '',\n  description: '',\n  priority: null,\n  status: null,\n  dueDate: null,\n  assignee: null,\n  completed: false\n})\n\n// Options\nconst priorities = [\n  { label: 'High', value: 'High' },\n  { label: 'Medium', value: 'Medium' },\n  { label: 'Low', value: 'Low' }\n]\n\nconst statuses = [\n  { label: 'Not Started', value: 'Not Started' },\n  { label: 'In Progress', value: 'In Progress' },\n  { label: 'Completed', value: 'Completed' },\n  { label: 'On Hold', value: 'On Hold' }\n]\n\nconst users = [\n  { name: 'John Doe' },\n  { name: 'Jane Smith' },\n  { name: 'Mike Johnson' }\n]\n\n// Computed\nconst filteredTasks = computed(() => {\n  if (!filters.value.search) return tasks.value\n  \n  const searchTerm = filters.value.search.toLowerCase()\n  return tasks.value.filter(task => \n    task.title.toLowerCase().includes(searchTerm) ||\n    task.description?.toLowerCase().includes(searchTerm) ||\n    task.assignee.toLowerCase().includes(searchTerm)\n  )\n})\n\n// Methods\nconst openNewTaskDialog = () => {\n  task.value = {\n    id: null,\n    title: '',\n    description: '',\n    priority: null,\n    status: 'Not Started',\n    dueDate: null,\n    assignee: null,\n    completed: false\n  }\n  submitted.value = false\n  taskDialog.value = true\n  dialogMode.value = 'new'\n}\n\nconst editTask = (data: any) => {\n  task.value = { ...data }\n  taskDialog.value = true\n  dialogMode.value = 'edit'\n}\n\nconst hideDialog = () => {\n  taskDialog.value = false\n  submitted.value = false\n}\n\nconst saveTask = () => {\n  submitted.value = true\n\n  if (!task.value.title?.trim()) {\n    return\n  }\n\n  if (task.value.id) {\n    const index = tasks.value.findIndex(t => t.id === task.value.id)\n    tasks.value[index] = task.value\n    toast.add({ severity: 'success', summary: 'Success', detail: 'Task Updated', life: 3000 })\n  } else {\n    task.value.id = tasks.value.length + 1\n    tasks.value.push(task.value)\n    toast.add({ severity: 'success', summary: 'Success', detail: 'Task Created', life: 3000 })\n  }\n\n  taskDialog.value = false\n  task.value = {\n    id: null,\n    title: '',\n    description: '',\n    priority: null,\n    status: null,\n    dueDate: null,\n    assignee: null,\n    completed: false\n  }\n}\n\nconst confirmDeleteTask = (data: any) => {\n  confirm.require({\n    message: 'Are you sure you want to delete this task?',\n    header: 'Confirm',\n    icon: 'pi pi-exclamation-triangle',\n    accept: () => deleteTask(data)\n  })\n}\n\nconst deleteTask = (data: any) => {\n  tasks.value = tasks.value.filter(t => t.id !== data.id)\n  toast.add({ severity: 'success', summary: 'Success', detail: 'Task Deleted', life: 3000 })\n}\n\nconst formatDate = (date: Date) => {\n  return DateTime.fromJSDate(date).toFormat('dd LLL yyyy')\n}\n\nconst getInitials = (name: string) => {\n  return name.split(' ').map(n => n[0]).join('')\n}\n\nconst getPrioritySeverity = (priority: string) => {\n  const map: { [key: string]: string } = {\n    'High': 'danger',\n    'Medium': 'warning',\n    'Low': 'success'\n  }\n  return map[priority]\n}\n\nconst getStatusSeverity = (status: string) => {\n  const map: { [key: string]: string } = {\n    'Not Started': 'secondary',\n    'In Progress': 'info',\n    'Completed': 'success',\n    'On Hold': 'warning'\n  }\n  return map[status]\n}\n\n// Lifecycle\nonMounted(() => {\n  // Load tasks from API\n})\n</script>\n\n<style scoped>\n:deep(.p-datatable-wrapper) {\n  min-height: 400px;\n}\n\nh3 {\n  margin: 0;\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: var(--text-color);\n}\n\n.line-through {\n  text-decoration: line-through;\n}\n</style>\n"],"names":["confirm","useConfirm","toast","useToast","stats","ref","tasks","loading","taskDialog","dialogMode","submitted","selectedTasks","filters","task","priorities","statuses","users","filteredTasks","computed","searchTerm","openNewTaskDialog","editTask","data","hideDialog","saveTask","_a","index","t","confirmDeleteTask","deleteTask","formatDate","date","DateTime","getInitials","name","n","getPrioritySeverity","priority","getStatusSeverity","status","onMounted"],"mappings":"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"}