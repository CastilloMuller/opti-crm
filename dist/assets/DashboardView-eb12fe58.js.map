{"version":3,"file":"DashboardView-eb12fe58.js","sources":["../../src/views/DashboardView.vue"],"sourcesContent":["<template>\n  <div class=\"grid\">\n    <!-- Stats Cards -->\n    <div class=\"col-12 md:col-6 lg:col-3\">\n      <div class=\"surface-card p-4 border-round shadow-1\">\n        <div class=\"flex justify-content-between mb-3\">\n          <div>\n            <span class=\"block text-500 font-medium mb-3\">Total Leads</span>\n            <div class=\"text-900 font-medium text-xl\">{{ leadMetrics.total }}</div>\n          </div>\n          <div class=\"flex align-items-center justify-content-center bg-blue-100 border-round\" style=\"width:2.5rem;height:2.5rem\">\n            <i class=\"pi pi-users text-blue-500 text-xl\"></i>\n          </div>\n        </div>\n        <span class=\"text-green-500 font-medium\">{{ leadMetrics.new }} new </span>\n        <span class=\"text-500\">since last week</span>\n      </div>\n    </div>\n\n    <div class=\"col-12 md:col-6 lg:col-3\">\n      <div class=\"surface-card p-4 border-round shadow-1\">\n        <div class=\"flex justify-content-between mb-3\">\n          <div>\n            <span class=\"block text-500 font-medium mb-3\">Open Tasks</span>\n            <div class=\"text-900 font-medium text-xl\">{{ todaysTasks.total }}</div>\n          </div>\n          <div class=\"flex align-items-center justify-content-center bg-orange-100 border-round\" style=\"width:2.5rem;height:2.5rem\">\n            <i class=\"pi pi-check-square text-orange-500 text-xl\"></i>\n          </div>\n        </div>\n        <span class=\"text-500\">{{ todaysTasks.completed }} completed this week</span>\n      </div>\n    </div>\n\n    <div class=\"col-12 md:col-6 lg:col-3\">\n      <div class=\"surface-card p-4 border-round shadow-1\">\n        <div class=\"flex justify-content-between mb-3\">\n          <div>\n            <span class=\"block text-500 font-medium mb-3\">Conversion Rate</span>\n            <div class=\"text-900 font-medium text-xl\">{{ conversionMetrics.conversionRate }}%</div>\n          </div>\n          <div class=\"flex align-items-center justify-content-center bg-cyan-100 border-round\" style=\"width:2.5rem;height:2.5rem\">\n            <i class=\"pi pi-percentage text-cyan-500 text-xl\"></i>\n          </div>\n        </div>\n        <span class=\"text-{{ conversionMetrics.conversionTrend > 0 ? 'green' : 'red' }}-500 font-medium\">{{ Math.abs(conversionMetrics.conversionTrend) }}% </span>\n        <span class=\"text-500\">vs last month</span>\n      </div>\n    </div>\n\n    <div class=\"col-12 md:col-6 lg:col-3\">\n      <div class=\"surface-card p-4 border-round shadow-1\">\n        <div class=\"flex justify-content-between mb-3\">\n          <div>\n            <span class=\"block text-500 font-medium mb-3\">Revenue</span>\n            <div class=\"text-900 font-medium text-xl\">â‚¬{{ formatCurrency(performanceMetrics.revenue) }}</div>\n          </div>\n          <div class=\"flex align-items-center justify-content-center bg-purple-100 border-round\" style=\"width:2.5rem;height:2.5rem\">\n            <i class=\"pi pi-euro text-purple-500 text-xl\"></i>\n          </div>\n        </div>\n        <span class=\"text-{{ performanceMetrics.revenueTrend > 0 ? 'green' : 'red' }}-500 font-medium\">{{ performanceMetrics.revenueTrend }}% </span>\n        <span class=\"text-500\">vs last month</span>\n      </div>\n    </div>\n\n    <!-- Charts -->\n    <div class=\"col-12 lg:col-6\">\n      <div class=\"surface-card p-4 border-round shadow-1\">\n        <h3>Lead Status Distribution</h3>\n        <Chart type=\"pie\" :data=\"leadStatusData\" :options=\"chartOptions\" />\n      </div>\n    </div>\n\n    <div class=\"col-12 lg:col-6\">\n      <div class=\"surface-card p-4 border-round shadow-1\">\n        <h3>Revenue Trend</h3>\n        <Chart type=\"line\" :data=\"revenueTrendData\" :options=\"chartOptions\" />\n      </div>\n    </div>\n\n    <!-- Recent Activities -->\n    <div class=\"col-12 lg:col-6\">\n      <div class=\"surface-card p-4 border-round shadow-1\">\n        <div class=\"flex justify-content-between align-items-center mb-4\">\n          <h3>Recent Activities</h3>\n          <Button label=\"View All\" link />\n        </div>\n        <Timeline :value=\"recentActivities\" class=\"customized-timeline\">\n          <template #content=\"slotProps\">\n            <div class=\"flex flex-column\">\n              <small class=\"text-color-secondary mb-1\">{{ formatDateTime(slotProps.item.timestamp) }}</small>\n              <span class=\"font-medium mb-1\">{{ slotProps.item.title }}</span>\n              <p class=\"text-color-secondary m-0\">{{ slotProps.item.description }}</p>\n            </div>\n          </template>\n        </Timeline>\n      </div>\n    </div>\n\n    <!-- Upcoming Tasks -->\n    <div class=\"col-12 lg:col-6\">\n      <div class=\"surface-card p-4 border-round shadow-1\">\n        <div class=\"flex justify-content-between align-items-center mb-4\">\n          <h3>Upcoming Tasks</h3>\n          <Button label=\"View All\" link />\n        </div>\n        <DataTable :value=\"upcomingTasks\" :rows=\"5\" :paginator=\"false\" class=\"p-datatable-sm\">\n          <Column field=\"title\" header=\"Task\"></Column>\n          <Column field=\"scheduledDate\" header=\"Due Date\">\n            <template #body=\"slotProps\">\n              {{ formatDateTime(slotProps.data.scheduledDate) }}\n            </template>\n          </Column>\n          <Column field=\"priority\" header=\"Priority\">\n            <template #body=\"slotProps\">\n              <Tag :value=\"slotProps.data.priority\" :severity=\"getPrioritySeverity(slotProps.data.priority)\" />\n            </template>\n          </Column>\n        </DataTable>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useAnalytics } from '@/composables/useAnalytics'\nimport { useLeadStore } from '@/stores/leadStore'\nimport { useWebSocket } from '@/services/websocket'\nimport { DateTime } from 'luxon'\n\n// PrimeVue Components\nimport Chart from 'primevue/chart'\nimport Timeline from 'primevue/timeline'\nimport DataTable from 'primevue/datatable'\nimport Column from 'primevue/column'\nimport Tag from 'primevue/tag'\nimport Button from 'primevue/button'\n\nconst router = useRouter()\nconst store = useLeadStore()\nconst {\n  leadMetrics,\n  leadFunnel,\n  activityMetrics,\n  performanceMetrics,\n  conversionMetrics\n} = useAnalytics()\n\nconst { isConnected, lastMessage } = useWebSocket()\n\n// Real-time status\nconst connectionStatus = computed(() => ({\n  status: isConnected.value ? 'Connected' : 'Disconnected',\n  class: isConnected.value ? 'status-connected' : 'status-disconnected',\n  icon: isConnected.value ? 'pi pi-check-circle' : 'pi pi-exclamation-triangle'\n}))\n\nconst lastUpdate = computed(() => \n  lastMessage.value ? DateTime.fromJSDate(lastMessage.value).toRelative() : 'Never'\n)\n\n// Lead Status Chart\nconst leadStatusData = computed(() => ({\n  labels: Object.keys(leadMetrics.value.statusCounts),\n  datasets: [{\n    data: Object.values(leadMetrics.value.statusCounts),\n    backgroundColor: [\n      '#3e5b82',\n      '#4a6b92',\n      '#567ba2',\n      '#628bb2',\n      '#6e9bc2',\n      '#7aabd2',\n      '#86bbe2'\n    ]\n  }]\n}))\n\n// Performance Chart\nconst revenueTrendData = computed(() => ({\n  labels: performanceMetrics.value.monthly.map(m => m.month),\n  datasets: [\n    {\n      label: 'Revenue',\n      data: performanceMetrics.value.monthly.map(m => m.revenue),\n      borderColor: '#4BC0C0',\n      tension: 0.4\n    }\n  ]\n}))\n\n// Chart Options\nconst chartOptions = {\n  plugins: {\n    legend: {\n      position: 'bottom'\n    }\n  }\n}\n\n// Tasks Overview\nconst todaysTasks = computed(() => {\n  const today = DateTime.now().startOf('day')\n  const tasks = store.tasks.filter(task => {\n    const taskDate = DateTime.fromISO(task.scheduledDate)\n    return taskDate >= today && taskDate < today.plus({ days: 1 })\n  })\n  \n  return {\n    total: tasks.length,\n    completed: tasks.filter(t => t.completed).length\n  }\n})\n\nconst upcomingTasks = computed(() => {\n  const now = DateTime.now()\n  return store.tasks\n    .filter(task => !task.completed && DateTime.fromISO(task.scheduledDate) >= now)\n    .sort((a, b) => \n      DateTime.fromISO(a.scheduledDate).toMillis() - \n      DateTime.fromISO(b.scheduledDate).toMillis()\n    )\n    .slice(0, 5)\n})\n\n// Recent Activities\nconst recentActivities = computed(() => {\n  const activities: any[] = []\n\n  // Add tasks\n  store.tasks.forEach(task => {\n    if (task.completed) {\n      activities.push({\n        type: 'task',\n        icon: 'pi pi-check-circle',\n        title: `Completed task: ${task.title}`,\n        description: task.description,\n        timestamp: task.scheduledDate\n      })\n    }\n  })\n\n  // Add communications\n  store.communications.forEach(comm => {\n    activities.push({\n      type: 'communication',\n      icon: comm.type === 'inbound' ? 'pi pi-arrow-down' : 'pi pi-arrow-up',\n      title: `${comm.type === 'inbound' ? 'Received' : 'Sent'} ${comm.method}: ${comm.content.substring(0, 50)}...`,\n      description: comm.content,\n      timestamp: comm.timestamp\n    })\n  })\n\n  return activities\n    .sort((a, b) => \n      DateTime.fromISO(b.timestamp).toMillis() - \n      DateTime.fromISO(a.timestamp).toMillis()\n    )\n    .slice(0, 10)\n})\n\n// Utility Functions\nconst formatCurrency = (value: number) => {\n  return new Intl.NumberFormat('nl-NL', {\n    style: 'currency',\n    currency: 'EUR'\n  }).format(value)\n}\n\nconst formatDateTime = (date: string) => {\n  return DateTime.fromISO(date).toFormat('dd MMM HH:mm')\n}\n\nconst getPrioritySeverity = (priority: string) => {\n  const map: { [key: string]: string } = {\n    'High': 'danger',\n    'Medium': 'warning',\n    'Low': 'success'\n  }\n  return map[priority]\n}\n</script>\n\n<style scoped>\n:deep(.customized-timeline) {\n  .p-timeline-event-content {\n    line-height: 1.5;\n  }\n  \n  .p-timeline-event-opposite {\n    flex: 0;\n    padding: 0 1rem;\n  }\n}\n\nh3 {\n  margin: 0 0 1rem 0;\n  font-size: 1.25rem;\n  font-weight: 600;\n  color: var(--text-color);\n}\n</style>\n"],"names":["useRouter","store","useLeadStore","leadMetrics","leadFunnel","activityMetrics","performanceMetrics","conversionMetrics","useAnalytics","isConnected","lastMessage","useWebSocket","computed","DateTime","leadStatusData","revenueTrendData","m","chartOptions","todaysTasks","today","tasks","task","taskDate","t","upcomingTasks","now","a","b","recentActivities","activities","comm","formatCurrency","value","formatDateTime","date","getPrioritySeverity","priority"],"mappings":"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"}