{"version":3,"file":"LeadsView-a7d5e522.js","sources":["../../src/views/LeadsView.vue"],"sourcesContent":["<template>\n  <div class=\"leads-view\">\n    <h1>Leads</h1>\n    \n    <LeadsToolbar\n      @new-lead=\"showNewLeadDialog = true\"\n      @filter-status=\"filterStatus = $event\"\n      @sort-change=\"sortField = $event\"\n      @sort-direction=\"sortAscending = $event\"\n      @import=\"showImportDialog = true\"\n      @export=\"exportLeads\"\n    />\n\n    <div class=\"leads-grid\">\n      <DataTable :value=\"sortedLeads\" @sort=\"handleSort\" responsiveLayout=\"scroll\">\n        <Column field=\"name\" header=\"Name\" sortable></Column>\n        <Column field=\"status\" header=\"Status\" sortable>\n          <template #body=\"slotProps\">\n            <Tag :severity=\"getStatusSeverity(slotProps.data.status)\">{{ slotProps.data.status }}</Tag>\n          </template>\n        </Column>\n        <Column field=\"email\" header=\"Email\" sortable></Column>\n        <Column field=\"phone\" header=\"Phone\" sortable></Column>\n        <Column field=\"decisionDate\" header=\"Decision Date\" sortable>\n          <template #body=\"slotProps\">\n            {{ formatDate(slotProps.data.decisionDate) }}\n          </template>\n        </Column>\n        <Column field=\"quotationValue\" header=\"Quotation Value\" sortable>\n          <template #body=\"slotProps\">\n            {{ formatCurrency(slotProps.data.quotationValue) }}\n          </template>\n        </Column>\n        <Column field=\"priority\" header=\"Priority\" sortable></Column>\n        <Column field=\"successRate\" header=\"Success Rate\" sortable></Column>\n        <Column header=\"Actions\">\n          <template #body=\"slotProps\">\n            <Button @click=\"navigateToLead(slotProps.data)\" icon=\"pi pi-eye\" class=\"p-button-rounded p-button-primary\"></Button>\n          </template>\n        </Column>\n      </DataTable>\n    </div>\n\n    <!-- New Lead Dialog -->\n    <Dialog\n      v-model:visible=\"showNewLeadDialog\"\n      modal\n      header=\"New Lead\"\n      :style=\"{ width: '50vw' }\"\n    >\n      <div class=\"new-lead-form\">\n        <div class=\"form-field\">\n          <label for=\"name\">Name*</label>\n          <InputText\n            id=\"name\"\n            v-model=\"newLead.name\"\n            required\n            autofocus\n          />\n        </div>\n\n        <div class=\"form-field\">\n          <label for=\"status\">Status*</label>\n          <Dropdown\n            id=\"status\"\n            v-model=\"newLead.status\"\n            :options=\"statuses\"\n            optionLabel=\"self\"\n            optionValue=\"self\"\n            required\n          />\n        </div>\n\n        <div class=\"form-field\">\n          <label for=\"email\">Email</label>\n          <InputText\n            id=\"email\"\n            v-model=\"newLead.email\"\n            type=\"email\"\n          />\n        </div>\n\n        <div class=\"form-field\">\n          <label for=\"phone\">Phone</label>\n          <InputText\n            id=\"phone\"\n            v-model=\"newLead.phone\"\n          />\n        </div>\n\n        <div class=\"form-field\">\n          <label for=\"decisionDate\">Decision Date</label>\n          <Calendar\n            id=\"decisionDate\"\n            v-model=\"newLead.decisionDate\"\n            dateFormat=\"dd/mm/yy\"\n            :showIcon=\"true\"\n          />\n        </div>\n\n        <div class=\"form-field\">\n          <label for=\"quotationValue\">Quotation Value</label>\n          <InputNumber\n            id=\"quotationValue\"\n            v-model=\"newLead.quotationValue\"\n            mode=\"currency\"\n            currency=\"EUR\"\n            locale=\"nl-NL\"\n          />\n        </div>\n\n        <div class=\"form-field\">\n          <label for=\"priority\">Priority (1-10)</label>\n          <InputNumber\n            id=\"priority\"\n            v-model=\"newLead.priority\"\n            :min=\"1\"\n            :max=\"10\"\n            showButtons\n          />\n        </div>\n\n        <div class=\"form-field\">\n          <label for=\"successRate\">Success Rate (%)</label>\n          <InputNumber\n            id=\"successRate\"\n            v-model=\"newLead.successRate\"\n            :min=\"0\"\n            :max=\"100\"\n            suffix=\"%\"\n            showButtons\n          />\n        </div>\n      </div>\n\n      <template #footer>\n        <Button\n          label=\"Cancel\"\n          icon=\"pi pi-times\"\n          @click=\"showNewLeadDialog = false\"\n          class=\"p-button-text\"\n        />\n        <Button\n          label=\"Create\"\n          icon=\"pi pi-check\"\n          @click=\"addNewLead\"\n          :disabled=\"!newLead.name || !newLead.status\"\n          autofocus\n        />\n      </template>\n    </Dialog>\n\n    <!-- Import Dialog -->\n    <Dialog\n      v-model:visible=\"showImportDialog\"\n      modal\n      header=\"Import Leads\"\n      :style=\"{ width: '40vw' }\"\n    >\n      <FileUpload\n        mode=\"basic\"\n        accept=\".csv\"\n        :maxFileSize=\"1000000\"\n        @upload=\"importLeads\"\n        :auto=\"true\"\n        chooseLabel=\"Select CSV File\"\n      />\n    </Dialog>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useLeadStore } from '@/stores/leadStore'\nimport type { Lead, LeadStatus } from '@/types/lead'\nimport DataTable from 'primevue/datatable'\nimport Column from 'primevue/column'\nimport Button from 'primevue/button'\nimport Dialog from 'primevue/dialog'\nimport InputText from 'primevue/inputtext'\nimport Dropdown from 'primevue/dropdown'\nimport InputNumber from 'primevue/inputnumber'\nimport Calendar from 'primevue/calendar'\nimport Tag from 'primevue/tag'\n\nconst router = useRouter()\nconst store = useLeadStore()\n\n// Table state\nconst sortField = ref('')\nconst sortAscending = ref(true)\n\n// New lead dialog\nconst showNewLeadDialog = ref(false)\nconst newLead = ref({\n  name: '',\n  status: 'Standaard' as LeadStatus,\n  email: '',\n  phone: '',\n  decisionDate: null as Date | null,\n  quotationValue: null as number | null,\n  priority: null as number | null,\n  successRate: null as number | null\n})\n\nconst statuses: LeadStatus[] = [\n  'Probeer af te ronden',\n  'Goede kans, warm houden',\n  'Standaard',\n  'Bellen als niets gehoord',\n  'Goede kans',\n  'Hot',\n  'Snel beslissen',\n  'Hot en snel beslissen',\n  'Niets mee doen',\n  'Wacht op gemeente'\n]\n\nconst getStatusSeverity = (status: LeadStatus) => {\n  const severities: Record<LeadStatus, string> = {\n    'Hot en snel beslissen': 'danger',\n    'Probeer af te ronden': 'warning',\n    'Goede kans, warm houden': 'success',\n    'Standaard': 'info',\n    'Bellen als niets gehoord': 'warning',\n    'Goede kans': 'success',\n    'Hot': 'danger',\n    'Snel beslissen': 'danger',\n    'Niets mee doen': 'info',\n    'Wacht op gemeente': 'warning'\n  }\n  return severities[status]\n}\n\nconst formatDate = (date: string | undefined) => {\n  if (!date) return ''\n  return new Date(date).toLocaleDateString('nl-NL', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  })\n}\n\nconst formatCurrency = (value: number | undefined) => {\n  if (!value) return ''\n  return new Intl.NumberFormat('nl-NL', {\n    style: 'currency',\n    currency: 'EUR'\n  }).format(value)\n}\n\nconst handleSort = (event: { field: string; order: number }) => {\n  sortField.value = event.field\n  sortAscending.value = event.order === 1\n}\n\nconst sortValue = (a: Lead, b: Lead, field: string): number => {\n  const aValue = (a as any)[field]\n  const bValue = (b as any)[field]\n\n  if (aValue === bValue) return 0\n  if (aValue === undefined || aValue === null) return sortAscending.value ? 1 : -1\n  if (bValue === undefined || bValue === null) return sortAscending.value ? -1 : 1\n\n  if (aValue < bValue) return sortAscending.value ? -1 : 1\n  if (aValue > bValue) return sortAscending.value ? 1 : -1\n  return 0\n}\n\nconst sortedLeads = computed(() => {\n  let sorted = [...store.leads.value]\n  if (sortField.value) {\n    sorted.sort((a, b) => sortValue(a, b, sortField.value))\n  }\n  return sorted\n})\n\nconst addNewLead = () => {\n  store.addLead({\n    name: newLead.value.name,\n    status: newLead.value.status,\n    email: newLead.value.email || undefined,\n    phone: newLead.value.phone || undefined,\n    decisionDate: newLead.value.decisionDate?.toISOString() || undefined,\n    quotationValue: newLead.value.quotationValue || undefined,\n    priority: newLead.value.priority || undefined,\n    successRate: newLead.value.successRate || undefined\n  })\n  showNewLeadDialog.value = false\n  resetNewLead()\n}\n\nconst resetNewLead = () => {\n  newLead.value = {\n    name: '',\n    status: 'Standaard',\n    email: '',\n    phone: '',\n    decisionDate: null,\n    quotationValue: null,\n    priority: null,\n    successRate: null\n  }\n}\n\nconst navigateToLead = (lead: Lead) => {\n  router.push(`/leads/${lead.id}`)\n}\n\nconst importLeads = (event: any) => {\n  // Implementation for CSV import\n  const file = event.files[0]\n  const reader = new FileReader()\n  reader.onload = (e) => {\n    // Process CSV data\n    // TODO: Implement CSV processing\n  }\n  reader.readAsText(file)\n}\n\nconst exportLeads = () => {\n  // Implementation for CSV export\n  // TODO: Implement CSV export\n}\n</script>\n\n<style scoped>\n.leads-view {\n  padding: 1rem;\n}\n\nh1 {\n  font-family: 'BankGothic', 'ITC Avant Garde Gothic', 'Arial Black', sans-serif;\n  margin-bottom: 1.5rem;\n  color: var(--color-primary);\n}\n\n.leads-grid {\n  padding: 1rem 0;\n}\n\n.form-field {\n  margin-bottom: 1rem;\n}\n\n.form-field label {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n}\n</style>\n"],"names":["router","useRouter","store","useLeadStore","sortField","ref","sortAscending","showNewLeadDialog","newLead","statuses","getStatusSeverity","status","formatDate","date","formatCurrency","value","handleSort","event","sortValue","a","b","field","aValue","bValue","sortedLeads","computed","sorted","addNewLead","_a","resetNewLead","navigateToLead","lead","importLeads","file","reader","e","exportLeads"],"mappings":"mhBA0LA,MAAMA,EAASC,IACTC,EAAQC,IAGRC,EAAYC,EAAI,EAAE,EAClBC,EAAgBD,EAAI,EAAI,EAGxBE,EAAoBF,EAAI,EAAK,EAC7BG,EAAUH,EAAI,CAClB,KAAM,GACN,OAAQ,YACR,MAAO,GACP,MAAO,GACP,aAAc,KACd,eAAgB,KAChB,SAAU,KACV,YAAa,IAAA,CACd,EAEKI,EAAyB,CAC7B,uBACA,0BACA,YACA,2BACA,aACA,MACA,iBACA,wBACA,iBACA,mBAAA,EAGIC,EAAqBC,IACsB,CAC7C,wBAAyB,SACzB,uBAAwB,UACxB,0BAA2B,UAC3B,UAAa,OACb,2BAA4B,UAC5B,aAAc,UACd,IAAO,SACP,iBAAkB,SAClB,iBAAkB,OAClB,oBAAqB,SAAA,GAELA,CAAM,EAGpBC,EAAcC,GACbA,EACE,IAAI,KAAKA,CAAI,EAAE,mBAAmB,QAAS,CAChD,KAAM,UACN,MAAO,OACP,IAAK,SAAA,CACN,EALiB,GAQdC,EAAkBC,GACjBA,EACE,IAAI,KAAK,aAAa,QAAS,CACpC,MAAO,WACP,SAAU,KAAA,CACX,EAAE,OAAOA,CAAK,EAJI,GAOfC,EAAcC,GAA4C,CAC9Db,EAAU,MAAQa,EAAM,MACVX,EAAA,MAAQW,EAAM,QAAU,CAAA,EAGlCC,EAAY,CAACC,EAASC,EAASC,IAA0B,CACvD,MAAAC,EAAUH,EAAUE,CAAK,EACzBE,EAAUH,EAAUC,CAAK,EAE/B,OAAIC,IAAWC,EAAe,EACFD,GAAW,KAAahB,EAAc,MAAQ,EAAI,GAClDiB,GAAW,MAEnCD,EAASC,EAAejB,EAAc,MAAQ,GAAK,EACnDgB,EAASC,EAAejB,EAAc,MAAQ,EAAI,GAC/C,CAAA,EAGHkB,EAAcC,EAAS,IAAM,CACjC,IAAIC,EAAS,CAAC,GAAGxB,EAAM,MAAM,KAAK,EAClC,OAAIE,EAAU,OACLsB,EAAA,KAAK,CAACP,EAAGC,IAAMF,EAAUC,EAAGC,EAAGhB,EAAU,KAAK,CAAC,EAEjDsB,CAAA,CACR,EAEKC,EAAa,IAAM,OACvBzB,EAAM,QAAQ,CACZ,KAAMM,EAAQ,MAAM,KACpB,OAAQA,EAAQ,MAAM,OACtB,MAAOA,EAAQ,MAAM,OAAS,OAC9B,MAAOA,EAAQ,MAAM,OAAS,OAC9B,eAAcoB,EAAApB,EAAQ,MAAM,eAAd,YAAAoB,EAA4B,gBAAiB,OAC3D,eAAgBpB,EAAQ,MAAM,gBAAkB,OAChD,SAAUA,EAAQ,MAAM,UAAY,OACpC,YAAaA,EAAQ,MAAM,aAAe,MAAA,CAC3C,EACDD,EAAkB,MAAQ,GACbsB,GAAA,EAGTA,EAAe,IAAM,CACzBrB,EAAQ,MAAQ,CACd,KAAM,GACN,OAAQ,YACR,MAAO,GACP,MAAO,GACP,aAAc,KACd,eAAgB,KAChB,SAAU,KACV,YAAa,IAAA,CACf,EAGIsB,EAAkBC,GAAe,CACrC/B,EAAO,KAAK,UAAU+B,EAAK,EAAE,EAAE,CAAA,EAG3BC,EAAef,GAAe,CAE5B,MAAAgB,EAAOhB,EAAM,MAAM,CAAC,EACpBiB,EAAS,IAAI,WACZA,EAAA,OAAUC,GAAM,CAAA,EAIvBD,EAAO,WAAWD,CAAI,CAAA,EAGlBG,EAAc,IAAM,CAAA"}