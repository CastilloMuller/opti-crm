var Z=Object.defineProperty;var G=(t,o,s)=>o in t?Z(t,o,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[o]=s;var C=(t,o,s)=>(G(t,typeof o!="symbol"?o+"":o,s),s);import{d as J,o as D,c as U,a as v,b as N,u as b,s as Q,e as z,r as f,f as k,D as $,g as X,h as V,t as F,w as B,i as q,j as Y,k as ee,F as te,l as ae,m as se,n as oe,p as ne,q as re,v as ie,R as ce,x as le,y as de,z as ue,A as pe,_ as R,B as me,C as fe,P as he}from"./vendor-4ce8851e.js";(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))l(n);new MutationObserver(n=>{for(const i of n)if(i.type==="childList")for(const h of i.addedNodes)h.tagName==="LINK"&&h.rel==="modulepreload"&&l(h)}).observe(document,{childList:!0,subtree:!0});function s(n){const i={};return n.integrity&&(i.integrity=n.integrity),n.referrerPolicy&&(i.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?i.credentials="include":n.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function l(n){if(n.ep)return;n.ep=!0;const i=s(n);fetch(n.href,i)}})();const ve={class:"sidebar"},ye=J({__name:"PrimeSidebarCustom",setup(t){const o=[{label:"Dashboard",icon:"pi pi-home",to:"/"},{label:"Leads",icon:"pi pi-users",to:"/leads"},{label:"Tasks",icon:"pi pi-check-square",to:"/tasks"},{label:"Calendar",icon:"pi pi-calendar",to:"/calendar"},{label:"Analytics",icon:"pi pi-chart-line",to:"/analytics"}];return(s,l)=>(D(),U("aside",ve,[l[0]||(l[0]=v("div",{class:"logo-container p-4"},[v("h2",{class:"text-xl font-bold text-primary"},"OptiCRM")],-1)),N(b(Q),{model:o,class:"border-none w-full"})]))}});const H=(t,o)=>{const s=t.__vccOpts||t;for(const[l,n]of o)s[l]=n;return s},ge=H(ye,[["__scopeId","data-v-8748e9dd"]]),W=z("leads",()=>{const t=f([]),o=f([]),s=f([]),l=f([]),n=f(!1),i=f(null),h=k(()=>e=>t.value.find(a=>a.id===e)),S=k(()=>e=>o.value.filter(a=>a.leadId===e)),I=k(()=>e=>s.value.filter(a=>a.leadId===e)),g=k(()=>e=>l.value.filter(a=>a.leadId===e)),E=k(()=>e=>t.value.filter(a=>{if(e.status&&e.status.length>0&&!e.status.includes(a.status)||e.priority&&e.priority.length>0&&!e.priority.includes(a.priority)||e.source&&e.source.length>0&&!e.source.includes(a.source)||e.assignedTo&&e.assignedTo.length>0&&!e.assignedTo.includes(a.assignedTo)||e.tags&&e.tags.length>0&&!e.tags.some(u=>a.tags.includes(u)))return!1;if(e.dateRange){const u=$.fromISO(a.createdAt),L=$.fromISO(e.dateRange.start),_=$.fromISO(e.dateRange.end);if(u<L||u>_)return!1}if(e.search){const u=e.search.toLowerCase();return a.name.toLowerCase().includes(u)||a.company.toLowerCase().includes(u)||a.email.toLowerCase().includes(u)}return!0})),A=k(()=>(e,a)=>[...e].sort((u,L)=>{const _=u[a.field],O=L[a.field];return a.direction==="asc"?_<O?-1:_>O?1:0:O<_?-1:O>_?1:0}));return{leads:t,tasks:o,communications:s,notes:l,loading:n,error:i,getLeadById:h,getTasksByLeadId:S,getCommunicationsByLeadId:I,getNotesByLeadId:g,getFilteredLeads:E,getSortedLeads:A,fetchLeads:async()=>{n.value=!0,i.value=null;try{const e=await fetch("/api/leads");t.value=await e.json()}catch(e){i.value=e instanceof Error?e.message:"Failed to fetch leads",console.error("Error fetching leads:",e)}finally{n.value=!1}},fetchTasks:async()=>{n.value=!0,i.value=null;try{const e=await fetch("/api/tasks");o.value=await e.json()}catch(e){i.value=e instanceof Error?e.message:"Failed to fetch tasks",console.error("Error fetching tasks:",e)}finally{n.value=!1}},fetchCommunications:async()=>{n.value=!0,i.value=null;try{const e=await fetch("/api/communications");s.value=await e.json()}catch(e){i.value=e instanceof Error?e.message:"Failed to fetch communications",console.error("Error fetching communications:",e)}finally{n.value=!1}},fetchNotes:async()=>{n.value=!0,i.value=null;try{const e=await fetch("/api/notes");l.value=await e.json()}catch(e){i.value=e instanceof Error?e.message:"Failed to fetch notes",console.error("Error fetching notes:",e)}finally{n.value=!1}},addLead:async e=>{n.value=!0,i.value=null;try{const u=await(await fetch("/api/leads",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})).json();return t.value.push(u),u}catch(a){throw i.value=a instanceof Error?a.message:"Failed to add lead",console.error("Error adding lead:",a),a}finally{n.value=!1}},updateLead:async(e,a)=>{n.value=!0,i.value=null;try{const L=await(await fetch(`/api/leads/${e}`,{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)})).json(),_=t.value.findIndex(O=>O.id===e);return _!==-1&&(t.value[_]=L),L}catch(u){throw i.value=u instanceof Error?u.message:"Failed to update lead",console.error("Error updating lead:",u),u}finally{n.value=!1}},deleteLead:async e=>{n.value=!0,i.value=null;try{await fetch(`/api/leads/${e}`,{method:"DELETE"}),t.value=t.value.filter(a=>a.id!==e)}catch(a){throw i.value=a instanceof Error?a.message:"Failed to delete lead",console.error("Error deleting lead:",a),a}finally{n.value=!1}},addTask:async e=>{n.value=!0,i.value=null;try{const u=await(await fetch("/api/tasks",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})).json();return o.value.push(u),u}catch(a){throw i.value=a instanceof Error?a.message:"Failed to add task",console.error("Error adding task:",a),a}finally{n.value=!1}},updateTask:async(e,a)=>{n.value=!0,i.value=null;try{const L=await(await fetch(`/api/tasks/${e}`,{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)})).json(),_=o.value.findIndex(O=>O.id===e);return _!==-1&&(o.value[_]=L),L}catch(u){throw i.value=u instanceof Error?u.message:"Failed to update task",console.error("Error updating task:",u),u}finally{n.value=!1}},deleteTask:async e=>{n.value=!0,i.value=null;try{await fetch(`/api/tasks/${e}`,{method:"DELETE"}),o.value=o.value.filter(a=>a.id!==e)}catch(a){throw i.value=a instanceof Error?a.message:"Failed to delete task",console.error("Error deleting task:",a),a}finally{n.value=!1}}}});class _e{constructor(){C(this,"socket",null);C(this,"store",W());C(this,"reconnectAttempts",0);C(this,"maxReconnectAttempts",5);C(this,"reconnectDelay",1e3);C(this,"heartbeatInterval",null);C(this,"isConnected",f(!1));C(this,"lastMessage",f(null));this.initializeWebSocket()}initializeWebSocket(){try{const o="wss://opti-crm-backend.onrender.com";this.socket=new WebSocket(o),this.socket.onopen=()=>{console.log("WebSocket connected"),this.isConnected.value=!0,this.reconnectAttempts=0,this.reconnectDelay=1e3,this.startHeartbeat()},this.socket.onclose=()=>{console.log("WebSocket disconnected"),this.isConnected.value=!1,this.handleReconnect()},this.socket.onerror=s=>{console.error("WebSocket error:",s),this.isConnected.value=!1},this.socket.onmessage=s=>{this.handleMessage(s.data),this.lastMessage.value=new Date}}catch(o){console.error("Failed to initialize WebSocket:",o)}}handleReconnect(){this.reconnectAttempts<this.maxReconnectAttempts?(this.reconnectAttempts++,console.log("Attempting to reconnect... ("+this.reconnectAttempts+"/"+this.maxReconnectAttempts+")"),setTimeout(()=>{this.initializeWebSocket()},this.reconnectDelay*this.reconnectAttempts)):console.log("Max reconnection attempts reached")}startHeartbeat(){this.heartbeatInterval&&clearInterval(this.heartbeatInterval),this.heartbeatInterval=window.setInterval(()=>{var o;((o=this.socket)==null?void 0:o.readyState)===WebSocket.OPEN&&this.socket.send(JSON.stringify({type:"heartbeat"}))},3e4)}handleMessage(o){try{const s=JSON.parse(o);switch(s.type){case"connection":console.log("Connection status:",s.status);break}}catch(s){console.error("Error handling message:",s)}}send(o){var s;((s=this.socket)==null?void 0:s.readyState)===WebSocket.OPEN?this.socket.send(JSON.stringify(o)):console.error("WebSocket is not connected")}}const j=new _e;function ke(){return{isConnected:j.isConnected,lastMessage:j.lastMessage,send:t=>j.send(t)}}const we={class:"topbar"},be={class:"flex justify-content-between align-items-center"},Ne={class:"flex align-items-center gap-3"},Se={class:"text-xl"},Ee={class:"flex align-items-center gap-3"},Te={class:"notifications-container"},Le={class:"flex align-items-center gap-2"},Ce={class:"font-semibold"},Ie={class:"text-sm text-color-secondary mt-2 mb-0"},Ae={class:"text-color-secondary"},Oe=J({__name:"PrimeTopbar",setup(t){const o=X(),{isConnected:s}=ke(),l=f(!1),n=f([{id:1,title:"New Lead",message:"John Doe has been added as a new lead",icon:"pi pi-user-plus",timestamp:new Date},{id:2,title:"Task Due",message:"Follow-up call with Sarah Smith is due in 1 hour",icon:"pi pi-clock",timestamp:new Date}]),i=k(()=>n.value.length),h=k(()=>{const g=o.name;return g.charAt(0).toUpperCase()+g.slice(1)}),S=()=>{l.value=!l.value},I=g=>new Intl.DateTimeFormat("en-US",{hour:"numeric",minute:"numeric",hour12:!0}).format(g);return(g,E)=>{const A=V("tooltip"),x=V("badge");return D(),U("header",we,[v("div",be,[v("div",Ne,[v("span",Se,F(h.value),1)]),v("div",Ee,[B(N(b(q),{icon:b(s)?"pi pi-wifi":"pi pi-wifi-off",severity:b(s)?"success":"danger",text:"",rounded:""},null,8,["icon","severity"]),[[A,b(s)?"Connected":"Disconnected",void 0,{bottom:!0}]]),B(N(b(q),{icon:"pi pi-bell",onClick:S,text:"",rounded:""},null,512),[[x,i.value]]),N(b(Y),{icon:"pi pi-user",shape:"circle"})])]),N(b(se),{visible:l.value,"onUpdate:visible":E[0]||(E[0]=y=>l.value=y),header:"Notifications",modal:!1,position:"right",breakpoints:{"960px":"75vw","640px":"100vw"},style:{width:"35vw"}},{default:ee(()=>[v("div",Te,[(D(!0),U(te,null,ae(n.value,y=>(D(),U("div",{key:y.id,class:"notification-item p-3 border-bottom-1 surface-border"},[v("div",Le,[v("i",{class:oe([y.icon,"text-primary"])},null,2),v("span",Ce,F(y.title),1)]),v("p",Ie,F(y.message),1),v("small",Ae,F(I(y.timestamp)),1)]))),128))])]),_:1},8,["visible"])])}}});const $e=H(Oe,[["__scopeId","data-v-e0f07d27"]]),xe=z("notifications",()=>{const t=f([]),o=f({userId:"",emailNotifications:!0,pushNotifications:!0,desktopNotifications:!0,notificationTypes:{task_due:{enabled:!0,email:!0,push:!0,desktop:!0},task_completed:{enabled:!0,email:!1,push:!0,desktop:!0},lead_created:{enabled:!0,email:!0,push:!0,desktop:!0},lead_updated:{enabled:!0,email:!1,push:!0,desktop:!0},lead_status_changed:{enabled:!0,email:!0,push:!0,desktop:!0},communication_received:{enabled:!0,email:!0,push:!0,desktop:!0},communication_scheduled:{enabled:!0,email:!0,push:!0,desktop:!0},note_added:{enabled:!0,email:!1,push:!0,desktop:!0},mention:{enabled:!0,email:!0,push:!0,desktop:!0},system:{enabled:!0,email:!0,push:!0,desktop:!0}},quietHours:{enabled:!1,start:"22:00",end:"07:00",timezone:Intl.DateTimeFormat().resolvedOptions().timeZone}}),s=f(!1),l=f(null),n=k(()=>t.value.filter(c=>!c.read).length),i=k(()=>{const c={};return t.value.forEach(d=>{const r=$.fromISO(d.timestamp).toFormat("yyyy-MM-dd");c[r]||(c[r]=[]),c[r].push(d)}),Object.entries(c).map(([d,r])=>({date:d,notifications:r.sort((T,P)=>$.fromISO(P.timestamp).toMillis()-$.fromISO(T.timestamp).toMillis())}))}),h=k(()=>[...t.value].sort((c,d)=>$.fromISO(d.timestamp).toMillis()-$.fromISO(c.timestamp).toMillis()).slice(0,5));return{notifications:t,preferences:o,loading:s,error:l,unreadCount:n,groupedNotifications:i,recentNotifications:h,fetchNotifications:async()=>{s.value=!0,l.value=null;try{const c=await fetch("/api/notifications");t.value=await c.json()}catch(c){l.value=c instanceof Error?c.message:"Failed to fetch notifications",console.error("Error fetching notifications:",c)}finally{s.value=!1}},markAsRead:async c=>{s.value=!0,l.value=null;try{await fetch(`/api/notifications/${c}/read`,{method:"POST"});const d=t.value.findIndex(r=>r.id===c);d!==-1&&(t.value[d]={...t.value[d],read:!0})}catch(d){l.value=d instanceof Error?d.message:"Failed to mark notification as read",console.error("Error marking notification as read:",d)}finally{s.value=!1}},markAllAsRead:async()=>{s.value=!0,l.value=null;try{await fetch("/api/notifications/read-all",{method:"POST"}),t.value=t.value.map(c=>({...c,read:!0}))}catch(c){l.value=c instanceof Error?c.message:"Failed to mark all notifications as read",console.error("Error marking all notifications as read:",c)}finally{s.value=!1}},deleteNotification:async c=>{s.value=!0,l.value=null;try{await fetch(`/api/notifications/${c}`,{method:"DELETE"}),t.value=t.value.filter(d=>d.id!==c)}catch(d){l.value=d instanceof Error?d.message:"Failed to delete notification",console.error("Error deleting notification:",d)}finally{s.value=!1}},clearAllNotifications:async()=>{s.value=!0,l.value=null;try{await fetch("/api/notifications/clear-all",{method:"POST"}),t.value=[]}catch(c){l.value=c instanceof Error?c.message:"Failed to clear all notifications",console.error("Error clearing all notifications:",c)}finally{s.value=!1}},updatePreferences:async c=>{s.value=!0,l.value=null;try{const r=await(await fetch("/api/notification-preferences",{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify(c)})).json();o.value=r}catch(d){l.value=d instanceof Error?d.message:"Failed to update notification preferences",console.error("Error updating notification preferences:",d)}finally{s.value=!1}},addNotification:async c=>{s.value=!0,l.value=null;try{const r=await(await fetch("/api/notifications",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(c)})).json();return t.value.unshift(r),r}catch(d){throw l.value=d instanceof Error?d.message:"Failed to add notification",console.error("Error adding notification:",d),d}finally{s.value=!1}}}}),Pe=f([]);k(()=>Pe.value.filter(t=>!t.read).length);function K(){const t=xe(),{notifications:o,preferences:s,loading:l,error:n,unreadCount:i,groupedNotifications:h,recentNotifications:S}=ne(t),I=async()=>{await t.fetchNotifications()},g=async p=>{await t.markAsRead(p)},E=async()=>{await t.markAllAsRead()},A=async p=>{await t.deleteNotification(p)},x=async()=>{await t.clearAllNotifications()},y=async p=>{await t.updatePreferences(p)},c=async p=>await t.addNotification(p);return{notifications:o,preferences:s,loading:l,error:n,unreadCount:i,groupedNotifications:h,recentNotifications:S,initialize:I,markAsRead:g,markAllAsRead:E,deleteNotification:A,clearAllNotifications:x,updatePreferences:y,addNotification:c,handleLeadUpdate:(p,m)=>{const w={create:`New lead created: ${m.name}`,update:`Lead updated: ${m.name}`,delete:`Lead deleted: ${m.name}`},e={create:"success",update:"info",delete:"warn"};c({type:"lead",action:p,title:"Lead Update",message:w[p],severity:e[p],data:m})},handleTaskUpdate:(p,m)=>{const w=W().getLeadById.value(m.leadId),e=w?w.name:"Unknown Lead",a={create:`New task created for ${e}: ${m.title}`,update:`Task updated for ${e}: ${m.title}`,delete:`Task deleted for ${e}: ${m.title}`},u={create:"success",update:"info",delete:"warn"};c({type:"task",action:p,title:"Task Update",message:a[p],severity:u[p],data:m})},handleCommunicationUpdate:(p,m)=>{const w=W().getLeadById.value(m.leadId),e=w?w.name:"Unknown Lead",a={create:`New ${m.type} communication with ${e}`,update:`Communication updated with ${e}`,delete:`Communication deleted with ${e}`},u={create:"success",update:"info",delete:"warn"};c({type:"communication",action:p,title:"Communication Update",message:a[p],severity:u[p],data:m})},handleNoteUpdate:(p,m)=>{const w=W().getLeadById.value(m.leadId),e=w?w.name:"Unknown Lead",a={create:`New note added for ${e}`,update:`Note updated for ${e}`,delete:`Note deleted for ${e}`},u={create:"success",update:"info",delete:"warn"};c({type:"note",action:p,title:"Note Update",message:a[p],severity:u[p],data:m})}}}function Re(){const t=f(null),o=f(!1),s=f(0),l=5,n=1e3,{addNotification:i}=K(),h=()=>{try{const r="wss://opti-crm-backend.onrender.com";t.value=new WebSocket(r),t.value.onopen=()=>{console.log("WebSocket connected"),o.value=!0,s.value=0},t.value.onclose=()=>{console.log("WebSocket disconnected"),o.value=!1,S()},t.value.onerror=T=>{console.error("WebSocket error:",T),o.value=!1},t.value.onmessage=T=>{try{const P=JSON.parse(T.data);I(P)}catch(P){console.error("Error parsing WebSocket message:",P)}}}catch(r){console.error("Error connecting to WebSocket:",r),S()}},S=()=>{s.value<l?(s.value++,console.log(`Attempting to reconnect (${s.value}/${l})...`),setTimeout(h,n*s.value)):(console.error("Max reconnection attempts reached"),i({type:"system",title:"Connection Error",message:"Unable to connect to the server. Please refresh the page.",priority:"high",actionRequired:!0}))},I=r=>{switch(r.type){case"notification":g(r.payload);break;case"lead_update":E(r.payload);break;case"task_update":A(r.payload);break;case"communication_update":x(r.payload);break;case"system_message":y(r.payload);break;default:console.warn("Unknown WebSocket message type:",r.type)}},g=r=>{i(r)},E=r=>{i({type:"lead_updated",title:"Lead Updated",message:`Lead "${r.name}" has been updated`,priority:"medium",actionRequired:!1,metadata:{leadId:r.id}})},A=r=>{i({type:"task_updated",title:"Task Updated",message:`Task "${r.title}" has been updated`,priority:"medium",actionRequired:!1,metadata:{taskId:r.id,leadId:r.leadId}})},x=r=>{i({type:"communication_received",title:"New Communication",message:`New ${r.method} communication for lead "${r.leadName}"`,priority:"medium",actionRequired:!0,metadata:{communicationId:r.id,leadId:r.leadId}})},y=r=>{i({type:"system",title:r.title||"System Message",message:r.message,priority:r.priority||"medium",actionRequired:r.actionRequired||!1,metadata:r.metadata})},c=(r,T)=>{t.value&&o.value?t.value.send(JSON.stringify({type:r,payload:T})):console.error("WebSocket is not connected")},d=()=>{t.value&&(t.value.close(),t.value=null,o.value=!1)};return re(()=>{h()}),ie(()=>{d()}),{isConnected:o,sendMessage:c,connect:h,disconnect:d}}const De={class:"app-container"},Ue={class:"main-content"},Fe={class:"content-wrapper p-4"},We=J({__name:"App",setup(t){return K(),Re(),(o,s)=>(D(),U("div",De,[N(ge),v("div",Ue,[N($e),v("div",Fe,[N(b(ce))])]),N(b(le),{position:"bottom-right"}),N(b(de))]))}});const Me=ue({history:pe("/"),routes:[{path:"/",name:"Dashboard",component:()=>R(()=>import("./DashboardView-eb12fe58.js"),["assets/DashboardView-eb12fe58.js","assets/vendor-4ce8851e.js","assets/vendor-92768526.css","assets/useAnalytics-fd02d146.js","assets/DashboardView-e6063bd1.css"])},{path:"/leads",name:"Leads",component:()=>R(()=>import("./LeadsView-a7d5e522.js"),["assets/LeadsView-a7d5e522.js","assets/vendor-4ce8851e.js","assets/vendor-92768526.css","assets/LeadsView-4896d41d.css"])},{path:"/leads/:id",name:"LeadDetail",component:()=>R(()=>import("./LeadDetailView-aa06552e.js"),["assets/LeadDetailView-aa06552e.js","assets/vendor-4ce8851e.js","assets/vendor-92768526.css","assets/LeadDetailView-5725c1d0.css"])},{path:"/tasks",name:"Tasks",component:()=>R(()=>import("./TasksView-a7b737d5.js"),["assets/TasksView-a7b737d5.js","assets/vendor-4ce8851e.js","assets/vendor-92768526.css","assets/TasksView-60ecac0f.css"])},{path:"/calendar",name:"Calendar",component:()=>R(()=>import("./CalendarView-ba7ebadd.js"),["assets/CalendarView-ba7ebadd.js","assets/vendor-4ce8851e.js","assets/vendor-92768526.css","assets/CalendarView-cf76b90e.css"])},{path:"/analytics",name:"Analytics",component:()=>R(()=>import("./AnalyticsView-2f1da9ed.js"),["assets/AnalyticsView-2f1da9ed.js","assets/useAnalytics-fd02d146.js","assets/vendor-4ce8851e.js","assets/vendor-92768526.css","assets/AnalyticsView-e0a93892.css"])}]}),M=me(We),je=fe();M.use(je);M.use(Me);M.use(he,{ripple:!0});M.mount("#app");export{H as _,ke as a,W as u};
