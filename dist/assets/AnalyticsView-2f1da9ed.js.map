{"version":3,"file":"AnalyticsView-2f1da9ed.js","sources":["../../src/composables/useReports.ts","../../src/views/AnalyticsView.vue"],"sourcesContent":["import { useAnalytics } from './useAnalytics'\nimport { useLeadStore } from '@/stores/leadStore'\nimport { DateTime } from 'luxon'\nimport jsPDF from 'jspdf'\nimport 'jspdf-autotable'\n\nexport function useReports() {\n  const analytics = useAnalytics()\n  const store = useLeadStore()\n\n  // Helper Functions\n  const formatCurrency = (value: number) => {\n    return new Intl.NumberFormat('nl-NL', {\n      style: 'currency',\n      currency: 'EUR'\n    }).format(value)\n  }\n\n  const formatDate = (date: string) => {\n    return DateTime.fromISO(date).toFormat('dd MMM yyyy')\n  }\n\n  const formatDateTime = (date: string) => {\n    return DateTime.fromISO(date).toFormat('dd MMM yyyy HH:mm')\n  }\n\n  // CSV Export Functions\n  const exportLeadsToCSV = () => {\n    const leads = store.leads.map(lead => ({\n      Name: lead.name,\n      Email: lead.email,\n      Phone: lead.phone,\n      Status: lead.status,\n      'Decision Date': formatDate(lead.decisionDate),\n      'Quotation Value': formatCurrency(lead.quotationValue || 0),\n      Priority: lead.priority,\n      'Success Rate': `${lead.successRate}%`,\n      'Lead Score': lead.leadscore,\n      'Created At': formatDateTime(lead.createdAt)\n    }))\n\n    const csv = Papa.unparse(leads)\n    downloadCSV(csv, 'leads_export.csv')\n  }\n\n  const exportTasksToCSV = () => {\n    const tasks = store.tasks.map(task => ({\n      'Lead Name': store.getLeadById.value(task.leadId)?.name || '',\n      Type: task.type,\n      Title: task.title,\n      Description: task.description,\n      'Scheduled Date': formatDateTime(task.scheduledDate),\n      Status: task.completed ? 'Completed' : 'Pending'\n    }))\n\n    const csv = Papa.unparse(tasks)\n    downloadCSV(csv, 'tasks_export.csv')\n  }\n\n  const exportCommunicationsToCSV = () => {\n    const communications = store.communications.map(comm => ({\n      'Lead Name': store.getLeadById.value(comm.leadId)?.name || '',\n      Type: comm.type,\n      Method: comm.method,\n      Content: comm.content,\n      Timestamp: formatDateTime(comm.timestamp)\n    }))\n\n    const csv = Papa.unparse(communications)\n    downloadCSV(csv, 'communications_export.csv')\n  }\n\n  // PDF Export Functions\n  const generateAnalyticsReport = () => {\n    const doc = new jsPDF()\n    const now = DateTime.now().toFormat('dd MMM yyyy')\n\n    // Title\n    doc.setFontSize(20)\n    doc.text('OptiCRM Analytics Report', 20, 20)\n    doc.setFontSize(12)\n    doc.text(`Generated on ${now}`, 20, 30)\n\n    // Lead Funnel\n    doc.setFontSize(16)\n    doc.text('Lead Funnel', 20, 45)\n    const funnelData = Object.entries(analytics.leadFunnel.value).map(([stage, data]) => [\n      stage,\n      data.count.toString(),\n      `${data.percentage.toFixed(1)}%`\n    ])\n    doc.autoTable({\n      startY: 50,\n      head: [['Stage', 'Count', 'Percentage']],\n      body: funnelData\n    })\n\n    // Task Statistics\n    const currentY = (doc as any).lastAutoTable.finalY + 15\n    doc.setFontSize(16)\n    doc.text('Task Statistics', 20, currentY)\n    const taskData = [\n      ['Completed Tasks', analytics.taskStats.value.completed.toString()],\n      ['In Progress Tasks', analytics.taskStats.value.inProgress.toString()]\n    ]\n    doc.autoTable({\n      startY: currentY + 5,\n      head: [['Metric', 'Value']],\n      body: taskData\n    })\n\n    // Communication Statistics\n    const commY = (doc as any).lastAutoTable.finalY + 15\n    doc.setFontSize(16)\n    doc.text('Communication Statistics', 20, commY)\n    const commData = [\n      ['Outbound Communications', analytics.communicationStats.value.byType.outbound.toString()],\n      ['Inbound Communications', analytics.communicationStats.value.byType.inbound.toString()]\n    ]\n    doc.autoTable({\n      startY: commY + 5,\n      head: [['Type', 'Count']],\n      body: commData\n    })\n\n    // Revenue Statistics\n    const revenueY = (doc as any).lastAutoTable.finalY + 15\n    doc.setFontSize(16)\n    doc.text('Revenue Statistics', 20, revenueY)\n    const revenueData = analytics.revenueStats.value.months.map((month, index) => [\n      month,\n      `$${analytics.revenueStats.value.values[index].toLocaleString()}`\n    ])\n    doc.autoTable({\n      startY: revenueY + 5,\n      head: [['Month', 'Revenue']],\n      body: revenueData\n    })\n\n    // Save the PDF\n    doc.save('opticrm-analytics-report.pdf')\n  }\n\n  const exportLeadDetailToPDF = async (leadId: string) => {\n    const lead = store.getLeadById.value(leadId)\n    if (!lead) return\n\n    const leadTasks = store.getLeadTasks.value(leadId)\n    const leadCommunications = store.getLeadCommunications.value(leadId)\n    const leadNotes = store.getLeadNotes.value(leadId)\n\n    const docDefinition = {\n      content: [\n        // Lead Header\n        {\n          text: lead.name,\n          style: 'header',\n          margin: [0, 0, 0, 20]\n        },\n        {\n          columns: [\n            {\n              width: 'auto',\n              text: [\n                { text: 'Status: ', bold: true },\n                lead.status\n              ]\n            },\n            {\n              width: 'auto',\n              text: [\n                { text: 'Lead Score: ', bold: true },\n                lead.leadscore.toString()\n              ]\n            }\n          ],\n          columnGap: 20,\n          margin: [0, 0, 0, 20]\n        },\n\n        // Lead Details\n        {\n          text: 'Lead Details',\n          style: 'sectionHeader',\n          margin: [0, 0, 0, 10]\n        },\n        {\n          table: {\n            headerRows: 1,\n            widths: ['*', '*'],\n            body: [\n              ['Field', 'Value'],\n              ['Email', lead.email || 'Not specified'],\n              ['Phone', lead.phone || 'Not specified'],\n              ['Decision Date', formatDate(lead.decisionDate)],\n              ['Quotation Value', formatCurrency(lead.quotationValue || 0)],\n              ['Priority', `${lead.priority}/10`],\n              ['Success Rate', `${lead.successRate}%`]\n            ]\n          },\n          margin: [0, 0, 0, 20]\n        },\n\n        // Tasks\n        {\n          text: 'Tasks',\n          style: 'sectionHeader',\n          margin: [0, 0, 0, 10]\n        },\n        {\n          table: {\n            headerRows: 1,\n            widths: ['auto', '*', 'auto', 'auto'],\n            body: [\n              ['Type', 'Title', 'Date', 'Status'],\n              ...leadTasks.map(task => [\n                task.type,\n                task.title,\n                formatDateTime(task.scheduledDate),\n                task.completed ? 'Completed' : 'Pending'\n              ])\n            ]\n          },\n          margin: [0, 0, 0, 20]\n        },\n\n        // Communications\n        {\n          text: 'Communications',\n          style: 'sectionHeader',\n          margin: [0, 0, 0, 10]\n        },\n        {\n          table: {\n            headerRows: 1,\n            widths: ['auto', 'auto', '*', 'auto'],\n            body: [\n              ['Type', 'Method', 'Content', 'Date'],\n              ...leadCommunications.map(comm => [\n                comm.type,\n                comm.method,\n                comm.content,\n                formatDateTime(comm.timestamp)\n              ])\n            ]\n          },\n          margin: [0, 0, 0, 20]\n        },\n\n        // Notes\n        {\n          text: 'Notes',\n          style: 'sectionHeader',\n          margin: [0, 0, 0, 10]\n        },\n        {\n          table: {\n            headerRows: 1,\n            widths: ['*', 'auto'],\n            body: [\n              ['Content', 'Date'],\n              ...leadNotes.map(note => [\n                note.content,\n                formatDateTime(note.createdAt)\n              ])\n            ]\n          }\n        }\n      ],\n      styles: {\n        header: {\n          fontSize: 24,\n          bold: true,\n          color: '#3e5b82'\n        },\n        sectionHeader: {\n          fontSize: 18,\n          bold: true,\n          color: '#3e5b82'\n        }\n      },\n      defaultStyle: {\n        font: 'Helvetica'\n      }\n    }\n\n    pdfMake.createPdf(docDefinition).download(`lead_report_${lead.name}.pdf`)\n  }\n\n  // Utility Functions\n  const downloadCSV = (csv: string, filename: string) => {\n    const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' })\n    const link = document.createElement('a')\n    if (link.download !== undefined) {\n      const url = URL.createObjectURL(blob)\n      link.setAttribute('href', url)\n      link.setAttribute('download', filename)\n      link.style.visibility = 'hidden'\n      document.body.appendChild(link)\n      link.click()\n      document.body.removeChild(link)\n    }\n  }\n\n  return {\n    exportLeadsToCSV,\n    exportTasksToCSV,\n    exportCommunicationsToCSV,\n    generateAnalyticsReport,\n    exportLeadDetailToPDF\n  }\n}\n","<template>\n  <div class=\"analytics-view\">\n    <div class=\"analytics-header\">\n      <h1>Analytics Dashboard</h1>\n      <div class=\"header-actions\">\n        <div class=\"period-selector\">\n          <Dropdown\n            v-model=\"selectedPeriod\"\n            :options=\"periodOptions\"\n            optionLabel=\"label\"\n            placeholder=\"Select Period\"\n          />\n        </div>\n        <SplitButton \n          label=\"Export\" \n          icon=\"pi pi-download\"\n          :model=\"exportItems\"\n          class=\"p-button-outlined\"\n        />\n      </div>\n    </div>\n\n    <!-- Key Metrics -->\n    <div class=\"metrics-grid\">\n      <div class=\"metric-card\">\n        <div class=\"metric-title\">Total Leads</div>\n        <div class=\"metric-value\">{{ leadMetrics.total }}</div>\n        <div class=\"metric-subtitle\">\n          Value: {{ formatCurrency(leadMetrics.totalValue) }}\n        </div>\n      </div>\n      <div class=\"metric-card\">\n        <div class=\"metric-title\">Conversion Rate</div>\n        <div class=\"metric-value\">{{ formatPercent(conversionMetrics.conversionRate) }}</div>\n        <div class=\"metric-subtitle\">\n          {{ conversionMetrics.highPriorityLeads }} High Priority Leads\n        </div>\n      </div>\n      <div class=\"metric-card\">\n        <div class=\"metric-title\">Task Completion</div>\n        <div class=\"metric-value\">\n          {{ formatPercent(activityMetrics.taskCompletion.completed / activityMetrics.taskCompletion.total * 100) }}\n        </div>\n        <div class=\"metric-subtitle\">\n          {{ activityMetrics.taskCompletion.completed }}/{{ activityMetrics.taskCompletion.total }} Tasks\n        </div>\n      </div>\n      <div class=\"metric-card\">\n        <div class=\"metric-title\">Avg Lead Score</div>\n        <div class=\"metric-value\">{{ formatNumber(leadMetrics.avgScore) }}</div>\n        <div class=\"metric-subtitle\">\n          Avg Value: {{ formatCurrency(leadMetrics.avgValue) }}\n        </div>\n      </div>\n    </div>\n\n    <!-- Charts Section -->\n    <div class=\"charts-grid\">\n      <!-- Lead Funnel -->\n      <Panel header=\"Lead Funnel\" class=\"chart-panel\">\n        <Chart type=\"funnel\" :data=\"funnelChartData\" :options=\"funnelChartOptions\" />\n      </Panel>\n\n      <!-- Monthly Performance -->\n      <Panel header=\"Monthly Performance\" class=\"chart-panel\">\n        <Chart type=\"line\" :data=\"performanceChartData\" :options=\"performanceChartOptions\" />\n      </Panel>\n\n      <!-- Task Distribution -->\n      <Panel header=\"Task Distribution\" class=\"chart-panel\">\n        <Chart type=\"pie\" :data=\"taskDistributionData\" :options=\"pieChartOptions\" />\n      </Panel>\n\n      <!-- Communication Activity -->\n      <Panel header=\"Communication Activity\" class=\"chart-panel\">\n        <Chart type=\"bar\" :data=\"communicationChartData\" :options=\"barChartOptions\" />\n      </Panel>\n    </div>\n\n    <!-- Detailed Analytics -->\n    <TabView>\n      <!-- Lead Quality Analysis -->\n      <TabPanel header=\"Lead Quality Analysis\">\n        <DataTable :value=\"qualityScoreTrends.all\" :paginator=\"true\" :rows=\"10\"\n                  sortField=\"score\" :sortOrder=\"-1\" class=\"analytics-table\">\n          <Column field=\"name\" header=\"Lead Name\" sortable />\n          <Column field=\"score\" header=\"Quality Score\" sortable>\n            <template #body=\"{ data }\">\n              <ProgressBar :value=\"data.score\" :showValue=\"true\" />\n            </template>\n          </Column>\n          <Column field=\"value\" header=\"Value\" sortable>\n            <template #body=\"{ data }\">\n              {{ formatCurrency(data.value) }}\n            </template>\n          </Column>\n          <Column field=\"priority\" header=\"Priority\" sortable />\n          <Column field=\"status\" header=\"Status\" sortable>\n            <template #body=\"{ data }\">\n              <Tag :value=\"data.status\" :severity=\"getStatusSeverity(data.status)\" />\n            </template>\n          </Column>\n        </DataTable>\n      </TabPanel>\n\n      <!-- Activity Timeline -->\n      <TabPanel header=\"Activity Timeline\">\n        <Timeline :value=\"activityTimeline\" class=\"activity-timeline\">\n          <template #content=\"slotProps\">\n            <div class=\"activity-item\">\n              <small class=\"activity-date\">{{ formatDate(slotProps.item.date) }}</small>\n              <div class=\"activity-content\">\n                <i :class=\"slotProps.item.icon\"></i>\n                {{ slotProps.item.description }}\n              </div>\n              <Tag :value=\"slotProps.item.type\" :severity=\"slotProps.item.severity\" />\n            </div>\n          </template>\n        </Timeline>\n      </TabPanel>\n\n      <!-- Performance Metrics -->\n      <TabPanel header=\"Performance Metrics\">\n        <div class=\"performance-grid\">\n          <div v-for=\"metric in performanceMetrics.monthly\" :key=\"metric.month\" class=\"performance-card\">\n            <h3>{{ metric.month }}</h3>\n            <div class=\"performance-stats\">\n              <div class=\"stat-item\">\n                <label>New Leads</label>\n                <span>{{ metric.leads }}</span>\n              </div>\n              <div class=\"stat-item\">\n                <label>Tasks Completed</label>\n                <span>{{ metric.completedTasks }}/{{ metric.tasks }}</span>\n              </div>\n              <div class=\"stat-item\">\n                <label>Communications</label>\n                <span>{{ metric.communications }}</span>\n              </div>\n              <div class=\"stat-item\">\n                <label>Value</label>\n                <span>{{ formatCurrency(metric.value) }}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </TabPanel>\n    </TabView>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted } from 'vue'\nimport { useAnalytics } from '@/composables/useAnalytics'\nimport { useReports } from '@/composables/useReports'\nimport { DateTime } from 'luxon'\n\n// PrimeVue Components\nimport Panel from 'primevue/panel'\nimport Chart from 'primevue/chart'\nimport DataTable from 'primevue/datatable'\nimport Column from 'primevue/column'\nimport ProgressBar from 'primevue/progressbar'\nimport Tag from 'primevue/tag'\nimport Timeline from 'primevue/timeline'\nimport TabView from 'primevue/tabview'\nimport TabPanel from 'primevue/tabpanel'\nimport Dropdown from 'primevue/dropdown'\nimport SplitButton from 'primevue/splitbutton'\n\nconst {\n  leadMetrics,\n  leadFunnel,\n  activityMetrics,\n  performanceMetrics,\n  conversionMetrics,\n  taskDistribution,\n  qualityScoreTrends\n} = useAnalytics()\n\nconst reports = useReports()\n\n// Period Selection\nconst selectedPeriod = ref({ label: 'Last 30 Days', value: 30 })\nconst periodOptions = [\n  { label: 'Last 7 Days', value: 7 },\n  { label: 'Last 30 Days', value: 30 },\n  { label: 'Last 90 Days', value: 90 },\n  { label: 'This Year', value: 365 }\n]\n\n// Export Menu Items\nconst exportItems = [\n  {\n    label: 'Export Analytics Report (PDF)',\n    icon: 'pi pi-file-pdf',\n    command: () => reports.exportAnalyticsToPDF()\n  },\n  {\n    label: 'Export Leads (CSV)',\n    icon: 'pi pi-file-excel',\n    command: () => reports.exportLeadsToCSV()\n  },\n  {\n    label: 'Export Tasks (CSV)',\n    icon: 'pi pi-file-excel',\n    command: () => reports.exportTasksToCSV()\n  },\n  {\n    label: 'Export Communications (CSV)',\n    icon: 'pi pi-file-excel',\n    command: () => reports.exportCommunicationsToCSV()\n  }\n]\n\n// Chart Data\nconst funnelChartData = computed(() => ({\n  labels: leadFunnel.value.map(item => item.stage),\n  datasets: [{\n    data: leadFunnel.value.map(item => item.count),\n    backgroundColor: [\n      '#3e5b82',\n      '#4a6b92',\n      '#567ba2',\n      '#628bb2',\n      '#6e9bc2',\n      '#7aabd2',\n      '#86bbe2'\n    ]\n  }]\n}))\n\nconst performanceChartData = computed(() => ({\n  labels: performanceMetrics.value.monthly.map(m => m.month),\n  datasets: [\n    {\n      label: 'Leads',\n      data: performanceMetrics.value.monthly.map(m => m.leads),\n      borderColor: '#3e5b82',\n      tension: 0.4\n    },\n    {\n      label: 'Tasks Completed',\n      data: performanceMetrics.value.monthly.map(m => m.completedTasks),\n      borderColor: '#ee9b4c',\n      tension: 0.4\n    }\n  ]\n}))\n\nconst taskDistributionData = computed(() => ({\n  labels: Object.keys(taskDistribution.value.byType),\n  datasets: [{\n    data: Object.values(taskDistribution.value.byType),\n    backgroundColor: ['#3e5b82', '#ee9b4c', '#f9cca1', '#90c2dd']\n  }]\n}))\n\nconst communicationChartData = computed(() => {\n  const data = activityMetrics.value.communicationStats.byTypeLast30Days\n  return {\n    labels: Object.keys(data),\n    datasets: [{\n      label: 'Communications',\n      data: Object.values(data),\n      backgroundColor: '#3e5b82'\n    }]\n  }\n})\n\n// Chart Options\nconst funnelChartOptions = {\n  maintainAspectRatio: false,\n  plugins: {\n    legend: {\n      display: false\n    }\n  }\n}\n\nconst performanceChartOptions = {\n  maintainAspectRatio: false,\n  plugins: {\n    legend: {\n      position: 'bottom'\n    }\n  },\n  scales: {\n    y: {\n      beginAtZero: true\n    }\n  }\n}\n\nconst pieChartOptions = {\n  maintainAspectRatio: false,\n  plugins: {\n    legend: {\n      position: 'bottom'\n    }\n  }\n}\n\nconst barChartOptions = {\n  maintainAspectRatio: false,\n  plugins: {\n    legend: {\n      display: false\n    }\n  },\n  scales: {\n    y: {\n      beginAtZero: true\n    }\n  }\n}\n\n// Activity Timeline\nconst activityTimeline = computed(() => {\n  const timeline: any[] = []\n  // Add tasks\n  activityMetrics.value.taskCompletion.last30Days.completed.forEach(task => {\n    timeline.push({\n      date: task.scheduledDate,\n      type: 'Task',\n      description: `Completed: ${task.title}`,\n      icon: 'pi pi-check-circle',\n      severity: 'success'\n    })\n  })\n  // Add communications\n  activityMetrics.value.communicationStats.last30Days.forEach(comm => {\n    timeline.push({\n      date: comm.timestamp,\n      type: comm.type,\n      description: `${comm.method}: ${comm.content.substring(0, 50)}...`,\n      icon: 'pi pi-comments',\n      severity: comm.type === 'inbound' ? 'info' : 'warning'\n    })\n  })\n  return timeline.sort((a, b) => \n    DateTime.fromISO(b.date).toMillis() - DateTime.fromISO(a.date).toMillis()\n  )\n})\n\n// Utility Functions\nfunction formatCurrency(value: number) {\n  return new Intl.NumberFormat('nl-NL', {\n    style: 'currency',\n    currency: 'EUR'\n  }).format(value)\n}\n\nfunction formatPercent(value: number) {\n  return `${Math.round(value)}%`\n}\n\nfunction formatNumber(value: number) {\n  return Math.round(value * 10) / 10\n}\n\nfunction formatDate(date: string) {\n  return DateTime.fromISO(date).toFormat('dd MMM yyyy HH:mm')\n}\n\nfunction getStatusSeverity(status: string) {\n  const severities: Record<string, string> = {\n    'Hot en snel beslissen': 'danger',\n    'Hot': 'danger',\n    'Snel beslissen': 'warning',\n    'Goede kans': 'success',\n    'Goede kans, warm houden': 'success',\n    'Standaard': 'info',\n    'Niets mee doen': 'secondary'\n  }\n  return severities[status] || 'info'\n}\n\n// Lifecycle\nonMounted(() => {\n  // Initialize charts\n})\n</script>\n\n<style scoped>\n.analytics-view {\n  padding: 1rem;\n}\n\n.analytics-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2rem;\n}\n\n.analytics-header h1 {\n  font-family: 'BankGothic', 'ITC Avant Garde Gothic', 'Arial Black', sans-serif;\n  margin: 0;\n  color: var(--color-primary);\n}\n\n.header-actions {\n  display: flex;\n  gap: 1rem;\n  align-items: center;\n}\n\n.metrics-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 1rem;\n  margin-bottom: 2rem;\n}\n\n.metric-card {\n  background: white;\n  padding: 1.5rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.metric-title {\n  font-size: 0.875rem;\n  color: #666;\n  margin-bottom: 0.5rem;\n}\n\n.metric-value {\n  font-size: 2rem;\n  font-weight: bold;\n  color: var(--color-primary);\n  margin-bottom: 0.5rem;\n}\n\n.metric-subtitle {\n  font-size: 0.875rem;\n  color: #666;\n}\n\n.charts-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));\n  gap: 1rem;\n  margin-bottom: 2rem;\n}\n\n.chart-panel {\n  height: 400px;\n}\n\n:deep(.p-panel-content) {\n  height: calc(100% - 50px);\n}\n\n.analytics-table {\n  margin-top: 1rem;\n}\n\n.activity-timeline {\n  margin-top: 1rem;\n}\n\n.activity-item {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n}\n\n.activity-date {\n  color: #666;\n  width: 150px;\n}\n\n.activity-content {\n  flex: 1;\n}\n\n.activity-content i {\n  margin-right: 0.5rem;\n}\n\n.performance-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 1rem;\n  margin-top: 1rem;\n}\n\n.performance-card {\n  background: white;\n  padding: 1rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.performance-card h3 {\n  margin: 0 0 1rem 0;\n  color: var(--color-primary);\n}\n\n.performance-stats {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 1rem;\n}\n\n.stat-item label {\n  display: block;\n  font-size: 0.875rem;\n  color: #666;\n  margin-bottom: 0.25rem;\n}\n\n.stat-item span {\n  font-weight: 500;\n}\n</style>\n"],"names":["useReports","analytics","useAnalytics","store","useLeadStore","formatCurrency","value","formatDate","date","DateTime","formatDateTime","exportLeadsToCSV","leads","lead","csv","downloadCSV","exportTasksToCSV","tasks","task","_a","exportCommunicationsToCSV","communications","comm","generateAnalyticsReport","doc","jsPDF","now","funnelData","stage","data","currentY","taskData","commY","commData","revenueY","revenueData","month","index","exportLeadDetailToPDF","leadId","leadTasks","leadCommunications","leadNotes","docDefinition","note","filename","blob","link","url","leadMetrics","leadFunnel","activityMetrics","performanceMetrics","conversionMetrics","taskDistribution","qualityScoreTrends","reports","selectedPeriod","ref","periodOptions","exportItems","funnelChartData","computed","item","performanceChartData","m","taskDistributionData","communicationChartData","funnelChartOptions","performanceChartOptions","pieChartOptions","barChartOptions","activityTimeline","timeline","a","b","formatPercent","formatNumber","getStatusSeverity","status","onMounted"],"mappings":"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"}