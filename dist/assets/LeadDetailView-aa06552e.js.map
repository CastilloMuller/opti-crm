{"version":3,"file":"LeadDetailView-aa06552e.js","sources":["../../src/views/LeadDetailView.vue"],"sourcesContent":["<template>\n  <div class=\"lead-detail-view\" v-if=\"lead\">\n    <!-- Header -->\n    <div class=\"lead-header\">\n      <div class=\"lead-title\">\n        <h1>{{ lead.name }}</h1>\n        <Tag :value=\"lead.status\" :severity=\"getStatusSeverity(lead.status)\" />\n      </div>\n      <div class=\"lead-actions\">\n        <Button icon=\"pi pi-pencil\" @click=\"showEditDialog = true\" class=\"p-button-text\" />\n        <Button icon=\"pi pi-trash\" @click=\"confirmDelete\" class=\"p-button-text p-button-danger\" />\n      </div>\n    </div>\n\n    <!-- Main Content -->\n    <div class=\"lead-content\">\n      <!-- Left Column: Info & Tasks -->\n      <div class=\"lead-main\">\n        <!-- Lead Information -->\n        <Panel header=\"Lead Information\" class=\"info-panel\">\n          <div class=\"info-grid\">\n            <div class=\"info-item\">\n              <label>Email</label>\n              <div>{{ lead.email || 'Not specified' }}</div>\n            </div>\n            <div class=\"info-item\">\n              <label>Phone</label>\n              <div>{{ lead.phone || 'Not specified' }}</div>\n            </div>\n            <div class=\"info-item\">\n              <label>Decision Date</label>\n              <div>{{ formatDate(lead.decisionDate) || 'Not specified' }}</div>\n            </div>\n            <div class=\"info-item\">\n              <label>Quotation Value</label>\n              <div>{{ formatCurrency(lead.quotationValue) || 'Not specified' }}</div>\n            </div>\n            <div class=\"info-item\">\n              <label>Priority</label>\n              <div>{{ lead.priority || 'Not specified' }}/10</div>\n            </div>\n            <div class=\"info-item\">\n              <label>Success Rate</label>\n              <div>{{ lead.successRate || 'Not specified' }}%</div>\n            </div>\n            <div class=\"info-item\">\n              <label>Lead Score</label>\n              <div>{{ lead.leadscore }}</div>\n            </div>\n          </div>\n        </Panel>\n\n        <!-- Tasks Section -->\n        <Panel header=\"Tasks\" class=\"tasks-panel\">\n          <template #icons>\n            <Button \n              icon=\"pi pi-plus\" \n              @click=\"showNewTaskDialog = true\"\n              class=\"p-button-text p-button-sm\" \n            />\n          </template>\n          \n          <DataTable :value=\"tasks\" class=\"tasks-table\">\n            <Column field=\"type\" header=\"Type\">\n              <template #body=\"{ data }\">\n                <Tag :value=\"getTaskTypeLabel(data.type)\" />\n              </template>\n            </Column>\n            <Column field=\"title\" header=\"Title\" />\n            <Column field=\"scheduledDate\" header=\"Date\">\n              <template #body=\"{ data }\">\n                {{ formatDate(data.scheduledDate) }}\n              </template>\n            </Column>\n            <Column field=\"completed\" header=\"Status\">\n              <template #body=\"{ data }\">\n                <Checkbox \n                  v-model=\"data.completed\"\n                  @change=\"handleTaskUpdate(data)\"\n                  :binary=\"true\"\n                />\n              </template>\n            </Column>\n          </DataTable>\n        </Panel>\n      </div>\n\n      <!-- Right Column: Communication History -->\n      <div class=\"lead-sidebar\">\n        <Panel header=\"Communication History\" class=\"history-panel\">\n          <template #icons>\n            <Button \n              icon=\"pi pi-plus\" \n              @click=\"showNewCommunicationDialog = true\"\n              class=\"p-button-text p-button-sm\" \n            />\n          </template>\n\n          <Timeline :value=\"communications\" class=\"history-timeline\">\n            <template #content=\"slotProps\">\n              <div class=\"timeline-item\">\n                <small class=\"timeline-date\">\n                  {{ formatDate(slotProps.item.timestamp) }}\n                </small>\n                <div class=\"timeline-type\">\n                  {{ slotProps.item.type === 'outbound' ? 'Sent' : 'Received' }}\n                  {{ getTaskTypeLabel(slotProps.item.method) }}\n                </div>\n                <div class=\"timeline-content\">\n                  {{ slotProps.item.content }}\n                </div>\n              </div>\n            </template>\n          </Timeline>\n        </Panel>\n\n        <!-- Notes Section -->\n        <Panel header=\"Notes\" class=\"notes-panel\">\n          <template #icons>\n            <Button \n              icon=\"pi pi-plus\" \n              @click=\"showNewNoteDialog = true\"\n              class=\"p-button-text p-button-sm\" \n            />\n          </template>\n\n          <div class=\"notes-container\">\n            <div \n              v-for=\"note in notes\" \n              :key=\"note.id\"\n              class=\"note-item\"\n            >\n              <div class=\"note-header\">\n                <small>{{ formatDate(note.createdAt) }}</small>\n                <Button \n                  icon=\"pi pi-trash\" \n                  @click=\"handleNoteDelete(note.id)\"\n                  class=\"p-button-text p-button-danger p-button-sm\" \n                />\n              </div>\n              <div class=\"note-content\">{{ note.content }}</div>\n            </div>\n          </div>\n        </Panel>\n      </div>\n    </div>\n\n    <!-- Dialogs -->\n    <!-- New Task Dialog -->\n    <Dialog \n      v-model:visible=\"showNewTaskDialog\"\n      modal \n      header=\"New Task\"\n      :style=\"{ width: '450px' }\"\n    >\n      <div class=\"dialog-content\">\n        <div class=\"field\">\n          <label for=\"taskType\">Type*</label>\n          <Dropdown\n            id=\"taskType\"\n            v-model=\"newTask.type\"\n            :options=\"taskTypes\"\n            placeholder=\"Select Type\"\n            class=\"w-full\"\n          />\n        </div>\n        <div class=\"field\">\n          <label for=\"taskTitle\">Title*</label>\n          <InputText\n            id=\"taskTitle\"\n            v-model=\"newTask.title\"\n            class=\"w-full\"\n          />\n        </div>\n        <div class=\"field\">\n          <label for=\"taskDate\">Date*</label>\n          <Calendar\n            id=\"taskDate\"\n            v-model=\"newTask.scheduledDate\"\n            showTime\n            class=\"w-full\"\n          />\n        </div>\n        <div class=\"field\">\n          <label for=\"taskDescription\">Description</label>\n          <Textarea\n            id=\"taskDescription\"\n            v-model=\"newTask.description\"\n            rows=\"3\"\n            class=\"w-full\"\n          />\n        </div>\n      </div>\n      <template #footer>\n        <Button label=\"Cancel\" @click=\"showNewTaskDialog = false\" class=\"p-button-text\" />\n        <Button label=\"Create\" @click=\"addNewTask\" autofocus />\n      </template>\n    </Dialog>\n\n    <!-- New Communication Dialog -->\n    <Dialog \n      v-model:visible=\"showNewCommunicationDialog\"\n      modal \n      header=\"Add Communication\"\n      :style=\"{ width: '450px' }\"\n    >\n      <div class=\"dialog-content\">\n        <div class=\"field\">\n          <label for=\"commType\">Type*</label>\n          <Dropdown\n            id=\"commType\"\n            v-model=\"newCommunication.type\"\n            :options=\"communicationTypes\"\n            placeholder=\"Select Type\"\n            class=\"w-full\"\n          />\n        </div>\n        <div class=\"field\">\n          <label for=\"commMethod\">Method*</label>\n          <Dropdown\n            id=\"commMethod\"\n            v-model=\"newCommunication.method\"\n            :options=\"taskTypes\"\n            placeholder=\"Select Method\"\n            class=\"w-full\"\n          />\n        </div>\n        <div class=\"field\">\n          <label for=\"commContent\">Content*</label>\n          <Textarea\n            id=\"commContent\"\n            v-model=\"newCommunication.content\"\n            rows=\"3\"\n            class=\"w-full\"\n          />\n        </div>\n      </div>\n      <template #footer>\n        <Button label=\"Cancel\" @click=\"showNewCommunicationDialog = false\" class=\"p-button-text\" />\n        <Button label=\"Add\" @click=\"addNewCommunication\" autofocus />\n      </template>\n    </Dialog>\n\n    <!-- New Note Dialog -->\n    <Dialog \n      v-model:visible=\"showNewNoteDialog\"\n      modal \n      header=\"Add Note\"\n      :style=\"{ width: '450px' }\"\n    >\n      <div class=\"dialog-content\">\n        <div class=\"field\">\n          <label for=\"noteContent\">Note Content*</label>\n          <Textarea\n            id=\"noteContent\"\n            v-model=\"newNote.content\"\n            rows=\"4\"\n            class=\"w-full\"\n            autoResize\n          />\n        </div>\n      </div>\n      <template #footer>\n        <Button label=\"Cancel\" @click=\"showNewNoteDialog = false\" class=\"p-button-text\" />\n        <Button label=\"Add\" @click=\"addNewNote\" autofocus />\n      </template>\n    </Dialog>\n\n    <!-- Delete Confirmation -->\n    <ConfirmDialog></ConfirmDialog>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted } from 'vue'\nimport { useRoute } from 'vue-router'\nimport { useLeadStore } from '@/stores/leadStore'\nimport type { TaskType } from '@/types/lead'\nimport Panel from 'primevue/panel'\nimport Button from 'primevue/button'\nimport Tag from 'primevue/tag'\nimport DataTable from 'primevue/datatable'\nimport Column from 'primevue/column'\nimport Checkbox from 'primevue/checkbox'\nimport Dialog from 'primevue/dialog'\nimport InputText from 'primevue/inputtext'\nimport Calendar from 'primevue/calendar'\nimport Dropdown from 'primevue/dropdown'\nimport InputNumber from 'primevue/inputnumber'\nimport Textarea from 'primevue/textarea'\nimport ConfirmDialog from 'primevue/confirmdialog'\nimport { useConfirm } from 'primevue/useconfirm'\n\nconst route = useRoute()\nconst store = useLeadStore()\nconst confirm = useConfirm()\n\n// Lead data\nconst lead = computed(() => store.getLeadById(route.params.id as string))\n\n// Tasks\nconst tasks = computed(() => store.getLeadTasks(route.params.id as string))\nconst showNewTaskDialog = ref(false)\nconst newTask = ref({\n  type: 'bellen' as TaskType,\n  title: '',\n  description: '',\n  scheduledDate: new Date(),\n  completed: false\n})\n\nconst addNewTask = () => {\n  store.addTask({\n    leadId: route.params.id as string,\n    ...newTask.value\n  })\n  showNewTaskDialog.value = false\n  newTask.value = {\n    type: 'bellen',\n    title: '',\n    description: '',\n    scheduledDate: new Date(),\n    completed: false\n  }\n}\n\nconst handleTaskUpdate = (task: { id: string } & Partial<{ completed: boolean }>) => {\n  store.updateTask(task.id, task)\n}\n\n// Notes\nconst notes = computed(() => \n  store.getLeadNotes(route.params.id as string)\n    .sort((a, b) => \n      new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()\n    )\n)\n\nconst showNewNoteDialog = ref(false)\nconst newNote = ref({\n  content: ''\n})\n\nconst addNewNote = () => {\n  store.addNote({\n    leadId: route.params.id as string,\n    content: newNote.value.content\n  })\n  showNewNoteDialog.value = false\n  newNote.value.content = ''\n}\n\nconst handleNoteDelete = (noteId: string) => {\n  confirm.require({\n    message: 'Are you sure you want to delete this note?',\n    header: 'Delete Confirmation',\n    icon: 'pi pi-info-circle',\n    acceptClass: 'p-button-danger',\n    accept: () => {\n      store.deleteNote(noteId)\n    }\n  })\n}\n\n// Communications\nconst communications = computed(() =>\n  store.getLeadCommunications(route.params.id as string)\n    .sort((a, b) =>\n      new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime()\n    )\n)\n\nconst showNewCommunicationDialog = ref(false)\nconst newCommunication = ref({\n  type: 'outbound' as const,\n  method: 'bellen' as TaskType,\n  content: ''\n})\n\nconst addNewCommunication = () => {\n  store.addCommunication({\n    leadId: route.params.id as string,\n    type: newCommunication.value.type,\n    method: newCommunication.value.method,\n    timestamp: new Date().toISOString(),\n    content: newCommunication.value.content\n  })\n  showNewCommunicationDialog.value = false\n  newCommunication.value = {\n    type: 'outbound',\n    method: 'bellen',\n    content: ''\n  }\n}\n\nconst handleCommunicationDelete = (commId: string) => {\n  confirm.require({\n    message: 'Are you sure you want to delete this communication?',\n    header: 'Delete Confirmation',\n    icon: 'pi pi-info-circle',\n    acceptClass: 'p-button-danger',\n    accept: () => {\n      store.deleteCommunication(commId)\n    }\n  })\n}\n\nconst taskTypes = [\n  { label: 'Call', value: 'bellen' },\n  { label: 'Meeting', value: 'afspraak' },\n  { label: 'Email', value: 'mailen' },\n  { label: 'Research', value: 'uitzoeken' }\n]\n\nconst communicationTypes = [\n  { label: 'Outbound', value: 'outbound' },\n  { label: 'Inbound', value: 'inbound' }\n]\n\nconst getTaskTypeLabel = (type: TaskType) => {\n  return taskTypes.find(t => t.value === type)?.label || type\n}\n\nconst formatDate = (date: string) => {\n  return new Date(date).toLocaleDateString('nl-NL', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  })\n}\n\nconst formatCurrency = (value: number | undefined) => {\n  if (!value) return ''\n  return new Intl.NumberFormat('nl-NL', { \n    style: 'currency', \n    currency: 'EUR' \n  }).format(value)\n}\n\nconst getStatusSeverity = (status: string) => {\n  const severities: Record<string, string> = {\n    'Hot en snel beslissen': 'danger',\n    'Hot': 'danger',\n    'Snel beslissen': 'warning',\n    'Goede kans': 'success',\n    'Goede kans, warm houden': 'success',\n    'Standaard': 'info',\n    'Niets mee doen': 'secondary'\n  }\n  return severities[status] || 'info'\n}\n\nconst confirmDelete = () => {\n  confirm.require({\n    message: 'Are you sure you want to delete this lead?',\n    header: 'Delete Confirmation',\n    icon: 'pi pi-exclamation-triangle',\n    accept: () => {\n      // Implement delete\n      // router.push('/leads')\n    }\n  })\n}\n\nonMounted(() => {\n  if (!lead.value) {\n    // Handle lead not found\n    console.error('Lead not found')\n  }\n})\n</script>\n\n<style scoped>\n.lead-detail-view {\n  padding: 1rem;\n}\n\n.lead-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2rem;\n}\n\n.lead-title {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n}\n\n.lead-title h1 {\n  font-family: 'BankGothic', 'ITC Avant Garde Gothic', 'Arial Black', sans-serif;\n  margin: 0;\n  color: var(--color-primary);\n}\n\n.lead-content {\n  display: grid;\n  grid-template-columns: 1fr 400px;\n  gap: 2rem;\n}\n\n.info-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 1rem;\n}\n\n.info-item label {\n  font-size: 0.875rem;\n  color: #666;\n  margin-bottom: 0.25rem;\n  display: block;\n}\n\n.tasks-panel {\n  margin-top: 1rem;\n}\n\n.history-panel {\n  margin-bottom: 1rem;\n}\n\n.timeline-item {\n  padding: 0.5rem 0;\n}\n\n.timeline-date {\n  color: #666;\n  display: block;\n  margin-bottom: 0.25rem;\n}\n\n.timeline-type {\n  font-weight: 500;\n  margin-bottom: 0.25rem;\n}\n\n.timeline-content {\n  color: #444;\n}\n\n.notes-container {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.note-item {\n  background: #f8f9fa;\n  padding: 1rem;\n  border-radius: 4px;\n}\n\n.note-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 0.5rem;\n}\n\n.note-header small {\n  color: #666;\n}\n\n.note-content {\n  white-space: pre-wrap;\n}\n\n.dialog-content {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.field label {\n  display: block;\n  margin-bottom: 0.5rem;\n}\n\n:deep(.p-panel) {\n  margin-bottom: 1rem;\n}\n\n:deep(.p-panel-header) {\n  background: #f8f9fa;\n}\n\n:deep(.p-timeline-event-opposite) {\n  display: none;\n}\n\n:deep(.p-timeline-event-content) {\n  margin-left: 1rem;\n}\n</style>\n"],"names":["route","useRoute","store","useLeadStore","confirm","useConfirm","lead","computed","tasks","showNewTaskDialog","ref","newTask","addNewTask","handleTaskUpdate","task","notes","b","showNewNoteDialog","newNote","addNewNote","handleNoteDelete","noteId","communications","showNewCommunicationDialog","newCommunication","addNewCommunication","taskTypes","communicationTypes","getTaskTypeLabel","type","_a","t","formatDate","date","formatCurrency","value","getStatusSeverity","status","confirmDelete","onMounted"],"mappings":"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"}